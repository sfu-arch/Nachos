#include "all_stats.h"
#include "statsEnums.h"

all_stats_c::all_stats_c(ProcessorStatistics* procStat) {
	
	// ============= ../def/alloc.stat.def =============
	m_ALLOC_COUNT = new COUNT_Stat("ALLOC_COUNT", "alloc.stat.out", ALLOC_COUNT);
	
	// ============= ../def/bp.stat.def =============
	m_DIST_BP_ON_PATH_CORRECT = new DIST_Stat("BP_ON_PATH_CORRECT", "bp.stat.out", BP_ON_PATH_CORRECT, procStat);
	m_BP_ON_PATH_CORRECT = (COUNT_Stat*) new DISTMember_Stat("BP_ON_PATH_CORRECT", "bp.stat.out", BP_ON_PATH_CORRECT, BP_ON_PATH_CORRECT);
	m_BP_ON_PATH_MISPREDICT = (COUNT_Stat*) new DISTMember_Stat("BP_ON_PATH_MISPREDICT", "bp.stat.out", BP_ON_PATH_MISPREDICT, BP_ON_PATH_CORRECT);
	m_BP_ON_PATH_MISFETCH = (COUNT_Stat*) new DISTMember_Stat("BP_ON_PATH_MISFETCH", "bp.stat.out", BP_ON_PATH_MISFETCH, BP_ON_PATH_CORRECT);
	m_DIST_BP_OFF_PATH_CORRECT = new DIST_Stat("BP_OFF_PATH_CORRECT", "bp.stat.out", BP_OFF_PATH_CORRECT, procStat);
	m_BP_OFF_PATH_CORRECT = (COUNT_Stat*) new DISTMember_Stat("BP_OFF_PATH_CORRECT", "bp.stat.out", BP_OFF_PATH_CORRECT, BP_OFF_PATH_CORRECT);
	m_BP_OFF_PATH_MISPREDICT = (COUNT_Stat*) new DISTMember_Stat("BP_OFF_PATH_MISPREDICT", "bp.stat.out", BP_OFF_PATH_MISPREDICT, BP_OFF_PATH_CORRECT);
	m_BP_OFF_PATH_MISFETCH = (COUNT_Stat*) new DISTMember_Stat("BP_OFF_PATH_MISFETCH", "bp.stat.out", BP_OFF_PATH_MISFETCH, BP_OFF_PATH_CORRECT);
	m_BP_MISPRED_STALL = new COUNT_Stat("BP_MISPRED_STALL", "bp.stat.out", BP_MISPRED_STALL);
	m_BP_RESOLVED = new COUNT_Stat("BP_RESOLVED", "bp.stat.out", BP_RESOLVED);
	m_BP_REDIRECT_RESOLVED = new COUNT_Stat("BP_REDIRECT_RESOLVED", "bp.stat.out", BP_REDIRECT_RESOLVED);
	m_PERFECT_TARGET_PRED = new COUNT_Stat("PERFECT_TARGET_PRED", "bp.stat.out", PERFECT_TARGET_PRED);
	
	// ============= ../def/core.stat.def =============
	m_DIST_SCHED_FAILED_REASON_SUCCESS = new DIST_Stat("SCHED_FAILED_REASON_SUCCESS", "core.stat.out", SCHED_FAILED_REASON_SUCCESS, procStat);
	m_SCHED_FAILED_REASON_SUCCESS = (COUNT_Stat*) new DISTMember_Stat("SCHED_FAILED_REASON_SUCCESS", "core.stat.out", SCHED_FAILED_REASON_SUCCESS, SCHED_FAILED_REASON_SUCCESS);
	m_SCHED_FAILED_OPERANDS_NOT_READY = (COUNT_Stat*) new DISTMember_Stat("SCHED_FAILED_OPERANDS_NOT_READY", "core.stat.out", SCHED_FAILED_OPERANDS_NOT_READY, SCHED_FAILED_REASON_SUCCESS);
	m_SCHED_FAILED_NO_PORTS = (COUNT_Stat*) new DISTMember_Stat("SCHED_FAILED_NO_PORTS", "core.stat.out", SCHED_FAILED_NO_PORTS, SCHED_FAILED_REASON_SUCCESS);
	m_NUM_SAMPLES = new COUNT_Stat("NUM_SAMPLES", "core.stat.out", NUM_SAMPLES);
	m_NUM_ACTIVE_BLOCKS = new RATIO_Stat("NUM_ACTIVE_BLOCKS",  "core.stat.out", NUM_ACTIVE_BLOCKS, NUM_SAMPLES, procStat);
	m_NUM_ACTIVE_THREADS = new RATIO_Stat("NUM_ACTIVE_THREADS",  "core.stat.out", NUM_ACTIVE_THREADS, NUM_SAMPLES, procStat);
	m_NUM_SCHED_IDLE_CYCLE = new COUNT_Stat("NUM_SCHED_IDLE_CYCLE", "core.stat.out", NUM_SCHED_IDLE_CYCLE);
	m_NUM_NO_SCHED_CYCLE = new COUNT_Stat("NUM_NO_SCHED_CYCLE", "core.stat.out", NUM_NO_SCHED_CYCLE);
	m_ROI_NUM_NO_SCHED_CYCLE = new COUNT_Stat("ROI_NUM_NO_SCHED_CYCLE", "core.stat.out", ROI_NUM_NO_SCHED_CYCLE);
	m_DISPATCHED_INST = new COUNT_Stat("DISPATCHED_INST", "core.stat.out", DISPATCHED_INST);
	m_DISPATCH_WAIT = new RATIO_Stat("DISPATCH_WAIT",  "core.stat.out", DISPATCH_WAIT, DISPATCHED_INST, procStat);
	m_CORE_DISPATCHED_INST = new COUNT_Stat("CORE_DISPATCHED_INST", "core.stat.out", CORE_DISPATCHED_INST);
	m_CORE_DISPATCH_WAIT = new RATIO_Stat("CORE_DISPATCH_WAIT",  "core.stat.out", CORE_DISPATCH_WAIT, CORE_DISPATCHED_INST, procStat);
	m_CORE_CYCLES = new COUNT_Stat("CORE_CYCLES", "core.stat.out", CORE_CYCLES);
	m_ROI_CORE_CYCLES = new COUNT_Stat("ROI_CORE_CYCLES", "core.stat.out", ROI_CORE_CYCLES);
	m_CORE_SCHED_THREADS = new RATIO_Stat("CORE_SCHED_THREADS",  "core.stat.out", CORE_SCHED_THREADS, CORE_CYCLES, procStat);
	m_NUM_NO_FETCH_CYCLES = new COUNT_Stat("NUM_NO_FETCH_CYCLES", "core.stat.out", NUM_NO_FETCH_CYCLES);
	m_CORE_NUM_NO_FETCH_CYCLES = new COUNT_Stat("CORE_NUM_NO_FETCH_CYCLES", "core.stat.out", CORE_NUM_NO_FETCH_CYCLES);
	m_CORE_NUM_NO_FETCH_CYCLES_WITH_READY_THREADS = new COUNT_Stat("CORE_NUM_NO_FETCH_CYCLES_WITH_READY_THREADS", "core.stat.out", CORE_NUM_NO_FETCH_CYCLES_WITH_READY_THREADS);
	m_CORE_NUM_FETCH_CYCLES = new COUNT_Stat("CORE_NUM_FETCH_CYCLES", "core.stat.out", CORE_NUM_FETCH_CYCLES);
	m_CORE_FETCH_DELTA = new RATIO_Stat("CORE_FETCH_DELTA",  "core.stat.out", CORE_FETCH_DELTA, CORE_NUM_FETCH_CYCLES, procStat);
	m_CORE_NUM_RETIRE_CYCLES = new COUNT_Stat("CORE_NUM_RETIRE_CYCLES", "core.stat.out", CORE_NUM_RETIRE_CYCLES);
	m_CORE_RETIRE_DELTA = new RATIO_Stat("CORE_RETIRE_DELTA",  "core.stat.out", CORE_RETIRE_DELTA, CORE_NUM_RETIRE_CYCLES, procStat);
	m_AVG_CORE_IDLE_CYCLE = new COUNT_Stat("AVG_CORE_IDLE_CYCLE", "core.stat.out", AVG_CORE_IDLE_CYCLE);
	
	// ============= ../def/core_trace.stat.def =============
	
	// ============= ../def/dram.stat.def =============
	m_DRAM_PRECHARGE = new COUNT_Stat("DRAM_PRECHARGE", "dram.stat.out", DRAM_PRECHARGE);
	m_DRAM_ACTIVATE = new COUNT_Stat("DRAM_ACTIVATE", "dram.stat.out", DRAM_ACTIVATE);
	m_DRAM_COLUMN = new COUNT_Stat("DRAM_COLUMN", "dram.stat.out", DRAM_COLUMN);
	m_DRAM_AVG_LATENCY_BASE = new COUNT_Stat("DRAM_AVG_LATENCY_BASE", "dram.stat.out", DRAM_AVG_LATENCY_BASE);
	m_DRAM_AVG_LATENCY = new RATIO_Stat("DRAM_AVG_LATENCY",  "dram.stat.out", DRAM_AVG_LATENCY, DRAM_AVG_LATENCY_BASE, procStat);
	m_BANDWIDTH_TOT = new COUNT_Stat("BANDWIDTH_TOT", "dram.stat.out", BANDWIDTH_TOT);
	m_DRAM_CHANNEL0_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL0_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL0_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL1_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL1_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL1_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL2_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL2_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL2_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL3_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL3_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL3_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL4_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL4_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL4_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL5_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL5_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL5_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL6_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL6_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL6_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL7_BANDWIDTH_SATURATED = new COUNT_Stat("DRAM_CHANNEL7_BANDWIDTH_SATURATED", "dram.stat.out", DRAM_CHANNEL7_BANDWIDTH_SATURATED);
	m_DRAM_CHANNEL0_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL0_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL0_DBUS_IDLE);
	m_DRAM_CHANNEL1_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL1_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL1_DBUS_IDLE);
	m_DRAM_CHANNEL2_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL2_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL2_DBUS_IDLE);
	m_DRAM_CHANNEL3_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL3_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL3_DBUS_IDLE);
	m_DRAM_CHANNEL4_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL4_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL4_DBUS_IDLE);
	m_DRAM_CHANNEL5_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL5_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL5_DBUS_IDLE);
	m_DRAM_CHANNEL6_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL6_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL6_DBUS_IDLE);
	m_DRAM_CHANNEL7_DBUS_IDLE = new COUNT_Stat("DRAM_CHANNEL7_DBUS_IDLE", "dram.stat.out", DRAM_CHANNEL7_DBUS_IDLE);
	
	// ============= ../def/general.stat.def =============
	m_INST_COUNT_TOT = new COUNT_Stat("INST_COUNT_TOT", "general.stat.out", INST_COUNT_TOT);
	m_INST_COUNT = new COUNT_Stat("INST_COUNT", "general.stat.out", INST_COUNT);
	m_CYC_COUNT_TOT = new COUNT_Stat("CYC_COUNT_TOT", "general.stat.out", CYC_COUNT_TOT);
	m_CYC_COUNT = new COUNT_Stat("CYC_COUNT", "general.stat.out", CYC_COUNT);
	m_EXE_TIME = new COUNT_Stat("EXE_TIME", "general.stat.out", EXE_TIME);
	m_NUM_REPEAT = new COUNT_Stat("NUM_REPEAT", "general.stat.out", NUM_REPEAT);
	m_CYC_COUNT_X86 = new COUNT_Stat("CYC_COUNT_X86", "general.stat.out", CYC_COUNT_X86);
	m_CYC_COUNT_PTX = new COUNT_Stat("CYC_COUNT_PTX", "general.stat.out", CYC_COUNT_PTX);
	m_AVG_BLOCK_EXE_CYCLE = new COUNT_Stat("AVG_BLOCK_EXE_CYCLE", "general.stat.out", AVG_BLOCK_EXE_CYCLE);
	m_AVG_BLOCK_EXE_CYCLE_BASE = new COUNT_Stat("AVG_BLOCK_EXE_CYCLE_BASE", "general.stat.out", AVG_BLOCK_EXE_CYCLE_BASE);
	m_PROGRESS_ERROR = new COUNT_Stat("PROGRESS_ERROR", "general.stat.out", PROGRESS_ERROR);
	m_FILE_OPEN_ERROR = new COUNT_Stat("FILE_OPEN_ERROR", "general.stat.out", FILE_OPEN_ERROR);
	m_NUM_THREAD = new COUNT_Stat("NUM_THREAD", "general.stat.out", NUM_THREAD);
	m_APPL_CYC_COUNT_BASE0 = new COUNT_Stat("APPL_CYC_COUNT_BASE0", "general.stat.out", APPL_CYC_COUNT_BASE0);
	m_APPL_CYC_COUNT_BASE1 = new COUNT_Stat("APPL_CYC_COUNT_BASE1", "general.stat.out", APPL_CYC_COUNT_BASE1);
	m_APPL_CYC_COUNT_BASE2 = new COUNT_Stat("APPL_CYC_COUNT_BASE2", "general.stat.out", APPL_CYC_COUNT_BASE2);
	m_APPL_CYC_COUNT_BASE3 = new COUNT_Stat("APPL_CYC_COUNT_BASE3", "general.stat.out", APPL_CYC_COUNT_BASE3);
	m_APPL_CYC_COUNT_BASE4 = new COUNT_Stat("APPL_CYC_COUNT_BASE4", "general.stat.out", APPL_CYC_COUNT_BASE4);
	m_APPL_CYC_COUNT0 = new RATIO_Stat("APPL_CYC_COUNT0",  "general.stat.out", APPL_CYC_COUNT0, APPL_CYC_COUNT_BASE0, procStat);
	m_APPL_CYC_COUNT1 = new RATIO_Stat("APPL_CYC_COUNT1",  "general.stat.out", APPL_CYC_COUNT1, APPL_CYC_COUNT_BASE1, procStat);
	m_APPL_CYC_COUNT2 = new RATIO_Stat("APPL_CYC_COUNT2",  "general.stat.out", APPL_CYC_COUNT2, APPL_CYC_COUNT_BASE2, procStat);
	m_APPL_CYC_COUNT3 = new RATIO_Stat("APPL_CYC_COUNT3",  "general.stat.out", APPL_CYC_COUNT3, APPL_CYC_COUNT_BASE3, procStat);
	m_APPL_CYC_COUNT4 = new RATIO_Stat("APPL_CYC_COUNT4",  "general.stat.out", APPL_CYC_COUNT4, APPL_CYC_COUNT_BASE4, procStat);
	m_CPI_DELTA_BASE0 = new COUNT_Stat("CPI_DELTA_BASE0", "general.stat.out", CPI_DELTA_BASE0);
	m_CPI_DELTA_BASE1 = new COUNT_Stat("CPI_DELTA_BASE1", "general.stat.out", CPI_DELTA_BASE1);
	m_CPI_DELTA_BASE2 = new COUNT_Stat("CPI_DELTA_BASE2", "general.stat.out", CPI_DELTA_BASE2);
	m_CPI_DELTA_BASE3 = new COUNT_Stat("CPI_DELTA_BASE3", "general.stat.out", CPI_DELTA_BASE3);
	m_CPI_DELTA_BASE4 = new COUNT_Stat("CPI_DELTA_BASE4", "general.stat.out", CPI_DELTA_BASE4);
	m_CPI_DELTA0 = new RATIO_Stat("CPI_DELTA0",  "general.stat.out", CPI_DELTA0, CPI_DELTA_BASE0, procStat);
	m_CPI_DELTA1 = new RATIO_Stat("CPI_DELTA1",  "general.stat.out", CPI_DELTA1, CPI_DELTA_BASE1, procStat);
	m_CPI_DELTA2 = new RATIO_Stat("CPI_DELTA2",  "general.stat.out", CPI_DELTA2, CPI_DELTA_BASE2, procStat);
	m_CPI_DELTA3 = new RATIO_Stat("CPI_DELTA3",  "general.stat.out", CPI_DELTA3, CPI_DELTA_BASE3, procStat);
	m_CPI_DELTA4 = new RATIO_Stat("CPI_DELTA4",  "general.stat.out", CPI_DELTA4, CPI_DELTA_BASE4, procStat);
	m_CYCLE_CPU = new COUNT_Stat("CYCLE_CPU", "general.stat.out", CYCLE_CPU);
	m_CYCLE_GPU = new COUNT_Stat("CYCLE_GPU", "general.stat.out", CYCLE_GPU);
	
	// ============= ../def/inst.stat.def =============
	m_DIST_OP_CAT_INVALID = new DIST_Stat("OP_CAT_INVALID", "inst.stat.out", OP_CAT_INVALID, procStat);
	m_OP_CAT_INVALID = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_INVALID", "inst.stat.out", OP_CAT_INVALID, OP_CAT_INVALID);
	m_OP_CAT_3DNOW = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_3DNOW", "inst.stat.out", OP_CAT_3DNOW, OP_CAT_INVALID);
	m_OP_CAT_AES = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_AES", "inst.stat.out", OP_CAT_AES, OP_CAT_INVALID);
	m_OP_CAT_BASE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_BASE", "inst.stat.out", OP_CAT_BASE, OP_CAT_INVALID);
	m_OP_CAT_BINARY = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_BINARY", "inst.stat.out", OP_CAT_BINARY, OP_CAT_INVALID);
	m_OP_CAT_BITBYTE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_BITBYTE", "inst.stat.out", OP_CAT_BITBYTE, OP_CAT_INVALID);
	m_OP_CAT_CALL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_CALL", "inst.stat.out", OP_CAT_CALL, OP_CAT_INVALID);
	m_OP_CAT_CMOV = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_CMOV", "inst.stat.out", OP_CAT_CMOV, OP_CAT_INVALID);
	m_OP_CAT_COND_BR = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_COND_BR", "inst.stat.out", OP_CAT_COND_BR, OP_CAT_INVALID);
	m_OP_CAT_DATAXFER = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_DATAXFER", "inst.stat.out", OP_CAT_DATAXFER, OP_CAT_INVALID);
	m_OP_CAT_DECIMAL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_DECIMAL", "inst.stat.out", OP_CAT_DECIMAL, OP_CAT_INVALID);
	m_OP_CAT_FCMOV = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_FCMOV", "inst.stat.out", OP_CAT_FCMOV, OP_CAT_INVALID);
	m_OP_CAT_FLAGOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_FLAGOP", "inst.stat.out", OP_CAT_FLAGOP, OP_CAT_INVALID);
	m_OP_CAT_INTERRUPT = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_INTERRUPT", "inst.stat.out", OP_CAT_INTERRUPT, OP_CAT_INVALID);
	m_OP_CAT_IO = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_IO", "inst.stat.out", OP_CAT_IO, OP_CAT_INVALID);
	m_OP_CAT_IOSTRINGOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_IOSTRINGOP", "inst.stat.out", OP_CAT_IOSTRINGOP, OP_CAT_INVALID);
	m_OP_CAT_LOGICAL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_LOGICAL", "inst.stat.out", OP_CAT_LOGICAL, OP_CAT_INVALID);
	m_OP_CAT_MISC = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_MISC", "inst.stat.out", OP_CAT_MISC, OP_CAT_INVALID);
	m_OP_CAT_MMX = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_MMX", "inst.stat.out", OP_CAT_MMX, OP_CAT_INVALID);
	m_OP_CAT_NOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_NOP", "inst.stat.out", OP_CAT_NOP, OP_CAT_INVALID);
	m_OP_CAT_PCLMULQDQ = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PCLMULQDQ", "inst.stat.out", OP_CAT_PCLMULQDQ, OP_CAT_INVALID);
	m_OP_CAT_POP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_POP", "inst.stat.out", OP_CAT_POP, OP_CAT_INVALID);
	m_OP_CAT_PREFETCH = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PREFETCH", "inst.stat.out", OP_CAT_PREFETCH, OP_CAT_INVALID);
	m_OP_CAT_PUSH = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PUSH", "inst.stat.out", OP_CAT_PUSH, OP_CAT_INVALID);
	m_OP_CAT_RET = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_RET", "inst.stat.out", OP_CAT_RET, OP_CAT_INVALID);
	m_OP_CAT_ROTATE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_ROTATE", "inst.stat.out", OP_CAT_ROTATE, OP_CAT_INVALID);
	m_OP_CAT_SEGOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SEGOP", "inst.stat.out", OP_CAT_SEGOP, OP_CAT_INVALID);
	m_OP_CAT_SEMAPHORE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SEMAPHORE", "inst.stat.out", OP_CAT_SEMAPHORE, OP_CAT_INVALID);
	m_OP_CAT_SHIFT = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SHIFT", "inst.stat.out", OP_CAT_SHIFT, OP_CAT_INVALID);
	m_OP_CAT_SSE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SSE", "inst.stat.out", OP_CAT_SSE, OP_CAT_INVALID);
	m_OP_CAT_SSE5 = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SSE5", "inst.stat.out", OP_CAT_SSE5, OP_CAT_INVALID);
	m_OP_CAT_STRINGOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_STRINGOP", "inst.stat.out", OP_CAT_STRINGOP, OP_CAT_INVALID);
	m_OP_CAT_SYSCALL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SYSCALL", "inst.stat.out", OP_CAT_SYSCALL, OP_CAT_INVALID);
	m_OP_CAT_SYSRET = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SYSRET", "inst.stat.out", OP_CAT_SYSRET, OP_CAT_INVALID);
	m_OP_CAT_SYSTEM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_SYSTEM", "inst.stat.out", OP_CAT_SYSTEM, OP_CAT_INVALID);
	m_OP_CAT_UNCOND_BR = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_UNCOND_BR", "inst.stat.out", OP_CAT_UNCOND_BR, OP_CAT_INVALID);
	m_OP_CAT_VTX = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_VTX", "inst.stat.out", OP_CAT_VTX, OP_CAT_INVALID);
	m_OP_CAT_WIDENOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_WIDENOP", "inst.stat.out", OP_CAT_WIDENOP, OP_CAT_INVALID);
	m_OP_CAT_X87_ALU = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_X87_ALU", "inst.stat.out", OP_CAT_X87_ALU, OP_CAT_INVALID);
	m_OP_CAT_XSAVE = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_XSAVE", "inst.stat.out", OP_CAT_XSAVE, OP_CAT_INVALID);
	m_OP_CAT_TR_MUL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MUL", "inst.stat.out", OP_CAT_TR_MUL, OP_CAT_INVALID);
	m_OP_CAT_TR_DIV = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_DIV", "inst.stat.out", OP_CAT_TR_DIV, OP_CAT_INVALID);
	m_OP_CAT_TR_FMUL = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_FMUL", "inst.stat.out", OP_CAT_TR_FMUL, OP_CAT_INVALID);
	m_OP_CAT_TR_FDIV = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_FDIV", "inst.stat.out", OP_CAT_TR_FDIV, OP_CAT_INVALID);
	m_OP_CAT_TR_NOP = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_NOP", "inst.stat.out", OP_CAT_TR_NOP, OP_CAT_INVALID);
	m_OP_CAT_PREFETCH_NTA = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PREFETCH_NTA", "inst.stat.out", OP_CAT_PREFETCH_NTA, OP_CAT_INVALID);
	m_OP_CAT_PREFETCH_T0 = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PREFETCH_T0", "inst.stat.out", OP_CAT_PREFETCH_T0, OP_CAT_INVALID);
	m_OP_CAT_PREFETCH_T1 = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PREFETCH_T1", "inst.stat.out", OP_CAT_PREFETCH_T1, OP_CAT_INVALID);
	m_OP_CAT_PREFETCH_T2 = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_PREFETCH_T2", "inst.stat.out", OP_CAT_PREFETCH_T2, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_LD_LM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_LD_LM", "inst.stat.out", OP_CAT_TR_MEM_LD_LM, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_LD_SM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_LD_SM", "inst.stat.out", OP_CAT_TR_MEM_LD_SM, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_LD_GM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_LD_GM", "inst.stat.out", OP_CAT_TR_MEM_LD_GM, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_ST_LM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_ST_LM", "inst.stat.out", OP_CAT_TR_MEM_ST_LM, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_ST_SM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_ST_SM", "inst.stat.out", OP_CAT_TR_MEM_ST_SM, OP_CAT_INVALID);
	m_OP_CAT_TR_MEM_ST_GM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_MEM_ST_GM", "inst.stat.out", OP_CAT_TR_MEM_ST_GM, OP_CAT_INVALID);
	m_OP_CAT_TR_DATA_XFER_LM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_DATA_XFER_LM", "inst.stat.out", OP_CAT_TR_DATA_XFER_LM, OP_CAT_INVALID);
	m_OP_CAT_TR_DATA_XFER_SM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_DATA_XFER_SM", "inst.stat.out", OP_CAT_TR_DATA_XFER_SM, OP_CAT_INVALID);
	m_OP_CAT_TR_DATA_XFER_GM = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_DATA_XFER_GM", "inst.stat.out", OP_CAT_TR_DATA_XFER_GM, OP_CAT_INVALID);
	m_OP_CAT_TR_LAST = (COUNT_Stat*) new DISTMember_Stat("OP_CAT_TR_LAST", "inst.stat.out", OP_CAT_TR_LAST, OP_CAT_INVALID);
	m_FP_OPS_TOT = new COUNT_Stat("FP_OPS_TOT", "inst.stat.out", FP_OPS_TOT);
	m_FP_OPS = new COUNT_Stat("FP_OPS", "inst.stat.out", FP_OPS);
	
	// ============= ../def/memory.stat.def =============
	m_AVG_MEMORY_LATENCY_BASE = new COUNT_Stat("AVG_MEMORY_LATENCY_BASE", "memory.stat.out", AVG_MEMORY_LATENCY_BASE);
	m_AVG_MEMORY_LATENCY = new RATIO_Stat("AVG_MEMORY_LATENCY",  "memory.stat.out", AVG_MEMORY_LATENCY, AVG_MEMORY_LATENCY_BASE, procStat);
	m_MSHR_FULL = new COUNT_Stat("MSHR_FULL", "memory.stat.out", MSHR_FULL);
	m_TOTAL_MEMORY = new COUNT_Stat("TOTAL_MEMORY", "memory.stat.out", TOTAL_MEMORY);
	m_TOTAL_MEMORY_MERGE = new RATIO_Stat("TOTAL_MEMORY_MERGE",  "memory.stat.out", TOTAL_MEMORY_MERGE, TOTAL_MEMORY, procStat);
	m_TOTAL_WB = new RATIO_Stat("TOTAL_WB",  "memory.stat.out", TOTAL_WB, TOTAL_MEMORY, procStat);
	m_L1_WB = new RATIO_Stat("L1_WB",  "memory.stat.out", L1_WB, TOTAL_WB, procStat);
	m_L2_WB = new RATIO_Stat("L2_WB",  "memory.stat.out", L2_WB, TOTAL_WB, procStat);
	m_L3_WB = new RATIO_Stat("L3_WB",  "memory.stat.out", L3_WB, TOTAL_WB, procStat);
	m_TOTAL_DRAM = new COUNT_Stat("TOTAL_DRAM", "memory.stat.out", TOTAL_DRAM);
	m_TOTAL_DRAM_MERGE = new RATIO_Stat("TOTAL_DRAM_MERGE",  "memory.stat.out", TOTAL_DRAM_MERGE, TOTAL_DRAM, procStat);
	m_L1_HIT_CPU = new COUNT_Stat("L1_HIT_CPU", "memory.stat.out", L1_HIT_CPU);
	m_L1_HIT_GPU = new COUNT_Stat("L1_HIT_GPU", "memory.stat.out", L1_HIT_GPU);
	m_L1_MISS_CPU = new COUNT_Stat("L1_MISS_CPU", "memory.stat.out", L1_MISS_CPU);
	m_L1_MISS_GPU = new COUNT_Stat("L1_MISS_GPU", "memory.stat.out", L1_MISS_GPU);
	m_L2_HIT_CPU = new COUNT_Stat("L2_HIT_CPU", "memory.stat.out", L2_HIT_CPU);
	m_L2_HIT_GPU = new COUNT_Stat("L2_HIT_GPU", "memory.stat.out", L2_HIT_GPU);
	m_L2_MISS_CPU = new COUNT_Stat("L2_MISS_CPU", "memory.stat.out", L2_MISS_CPU);
	m_L2_MISS_GPU = new COUNT_Stat("L2_MISS_GPU", "memory.stat.out", L2_MISS_GPU);
	m_L3_HIT_CPU = new COUNT_Stat("L3_HIT_CPU", "memory.stat.out", L3_HIT_CPU);
	m_L3_HIT_GPU = new COUNT_Stat("L3_HIT_GPU", "memory.stat.out", L3_HIT_GPU);
	m_L3_MISS_CPU = new COUNT_Stat("L3_MISS_CPU", "memory.stat.out", L3_MISS_CPU);
	m_L3_MISS_GPU = new COUNT_Stat("L3_MISS_GPU", "memory.stat.out", L3_MISS_GPU);
	m_L3_HIT_PROMOTION_CPU = new COUNT_Stat("L3_HIT_PROMOTION_CPU", "memory.stat.out", L3_HIT_PROMOTION_CPU);
	m_L3_HIT_PROMOTION_GPU = new COUNT_Stat("L3_HIT_PROMOTION_GPU", "memory.stat.out", L3_HIT_PROMOTION_GPU);
	m_DIST_ICACHE_HIT = new DIST_Stat("ICACHE_HIT", "memory.stat.out", ICACHE_HIT, procStat);
	m_ICACHE_HIT = (COUNT_Stat*) new DISTMember_Stat("ICACHE_HIT", "memory.stat.out", ICACHE_HIT, ICACHE_HIT);
	m_ICACHE_MISS = (COUNT_Stat*) new DISTMember_Stat("ICACHE_MISS", "memory.stat.out", ICACHE_MISS, ICACHE_HIT);
	m_FETCH_THREAD_SKIP_LD_WAIT = new COUNT_Stat("FETCH_THREAD_SKIP_LD_WAIT", "memory.stat.out", FETCH_THREAD_SKIP_LD_WAIT);
	m_FETCH_THREAD_SKIP_BR_WAIT = new COUNT_Stat("FETCH_THREAD_SKIP_BR_WAIT", "memory.stat.out", FETCH_THREAD_SKIP_BR_WAIT);
	m_FETCH_THREAD_SKIP_SCHED_WAIT = new COUNT_Stat("FETCH_THREAD_SKIP_SCHED_WAIT", "memory.stat.out", FETCH_THREAD_SKIP_SCHED_WAIT);
	m_DIST_COAL_INST = new DIST_Stat("COAL_INST", "memory.stat.out", COAL_INST, procStat);
	m_COAL_INST = (COUNT_Stat*) new DISTMember_Stat("COAL_INST", "memory.stat.out", COAL_INST, COAL_INST);
	m_UNCOAL_INST = (COUNT_Stat*) new DISTMember_Stat("UNCOAL_INST", "memory.stat.out", UNCOAL_INST, COAL_INST);
	m_DIST_COAL_INST_SINGLE_TRANS = new DIST_Stat("COAL_INST_SINGLE_TRANS", "memory.stat.out", COAL_INST_SINGLE_TRANS, procStat);
	m_COAL_INST_SINGLE_TRANS = (COUNT_Stat*) new DISTMember_Stat("COAL_INST_SINGLE_TRANS", "memory.stat.out", COAL_INST_SINGLE_TRANS, COAL_INST_SINGLE_TRANS);
	m_COAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("COAL_INST_MUL_TRANS", "memory.stat.out", COAL_INST_MUL_TRANS, COAL_INST_SINGLE_TRANS);
	m_UNCOAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("UNCOAL_INST_MUL_TRANS", "memory.stat.out", UNCOAL_INST_MUL_TRANS, COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST = new DIST_Stat("SM_COAL_INST", "memory.stat.out", SM_COAL_INST, procStat);
	m_SM_COAL_INST = (COUNT_Stat*) new DISTMember_Stat("SM_COAL_INST", "memory.stat.out", SM_COAL_INST, SM_COAL_INST);
	m_CM_COAL_INST = (COUNT_Stat*) new DISTMember_Stat("CM_COAL_INST", "memory.stat.out", CM_COAL_INST, SM_COAL_INST);
	m_TM_COAL_INST = (COUNT_Stat*) new DISTMember_Stat("TM_COAL_INST", "memory.stat.out", TM_COAL_INST, SM_COAL_INST);
	m_DM_COAL_INST = (COUNT_Stat*) new DISTMember_Stat("DM_COAL_INST", "memory.stat.out", DM_COAL_INST, SM_COAL_INST);
	m_DIST_SM_UNCOAL_INST = new DIST_Stat("SM_UNCOAL_INST", "memory.stat.out", SM_UNCOAL_INST, procStat);
	m_SM_UNCOAL_INST = (COUNT_Stat*) new DISTMember_Stat("SM_UNCOAL_INST", "memory.stat.out", SM_UNCOAL_INST, SM_UNCOAL_INST);
	m_CM_UNCOAL_INST = (COUNT_Stat*) new DISTMember_Stat("CM_UNCOAL_INST", "memory.stat.out", CM_UNCOAL_INST, SM_UNCOAL_INST);
	m_TM_UNCOAL_INST = (COUNT_Stat*) new DISTMember_Stat("TM_UNCOAL_INST", "memory.stat.out", TM_UNCOAL_INST, SM_UNCOAL_INST);
	m_DM_UNCOAL_INST = (COUNT_Stat*) new DISTMember_Stat("DM_UNCOAL_INST", "memory.stat.out", DM_UNCOAL_INST, SM_UNCOAL_INST);
	m_DIST_SM_COAL_INST_SINGLE_TRANS = new DIST_Stat("SM_COAL_INST_SINGLE_TRANS", "memory.stat.out", SM_COAL_INST_SINGLE_TRANS, procStat);
	m_SM_COAL_INST_SINGLE_TRANS = (COUNT_Stat*) new DISTMember_Stat("SM_COAL_INST_SINGLE_TRANS", "memory.stat.out", SM_COAL_INST_SINGLE_TRANS, SM_COAL_INST_SINGLE_TRANS);
	m_CM_COAL_INST_SINGLE_TRANS = (COUNT_Stat*) new DISTMember_Stat("CM_COAL_INST_SINGLE_TRANS", "memory.stat.out", CM_COAL_INST_SINGLE_TRANS, SM_COAL_INST_SINGLE_TRANS);
	m_TM_COAL_INST_SINGLE_TRANS = (COUNT_Stat*) new DISTMember_Stat("TM_COAL_INST_SINGLE_TRANS", "memory.stat.out", TM_COAL_INST_SINGLE_TRANS, SM_COAL_INST_SINGLE_TRANS);
	m_DM_COAL_INST_SINGLE_TRANS = (COUNT_Stat*) new DISTMember_Stat("DM_COAL_INST_SINGLE_TRANS", "memory.stat.out", DM_COAL_INST_SINGLE_TRANS, SM_COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST_MUL_TRANS = new DIST_Stat("SM_COAL_INST_MUL_TRANS", "memory.stat.out", SM_COAL_INST_MUL_TRANS, procStat);
	m_SM_COAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("SM_COAL_INST_MUL_TRANS", "memory.stat.out", SM_COAL_INST_MUL_TRANS, SM_COAL_INST_MUL_TRANS);
	m_CM_COAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("CM_COAL_INST_MUL_TRANS", "memory.stat.out", CM_COAL_INST_MUL_TRANS, SM_COAL_INST_MUL_TRANS);
	m_TM_COAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("TM_COAL_INST_MUL_TRANS", "memory.stat.out", TM_COAL_INST_MUL_TRANS, SM_COAL_INST_MUL_TRANS);
	m_DM_COAL_INST_MUL_TRANS = (COUNT_Stat*) new DISTMember_Stat("DM_COAL_INST_MUL_TRANS", "memory.stat.out", DM_COAL_INST_MUL_TRANS, SM_COAL_INST_MUL_TRANS);
	m_NUM_MUL_TRANS_CM_TM_DM_INST = new COUNT_Stat("NUM_MUL_TRANS_CM_TM_DM_INST", "memory.stat.out", NUM_MUL_TRANS_CM_TM_DM_INST);
	m_NUM_MUL_TRANS_CM_TM_DM = new RATIO_Stat("NUM_MUL_TRANS_CM_TM_DM",  "memory.stat.out", NUM_MUL_TRANS_CM_TM_DM, NUM_MUL_TRANS_CM_TM_DM_INST, procStat);
	m_CONST_CACHE_HIT = new COUNT_Stat("CONST_CACHE_HIT", "memory.stat.out", CONST_CACHE_HIT);
	m_CONST_CACHE_MISS = new COUNT_Stat("CONST_CACHE_MISS", "memory.stat.out", CONST_CACHE_MISS);
	m_CONST_CACHE_MISS_NO_EXECUTE = new COUNT_Stat("CONST_CACHE_MISS_NO_EXECUTE", "memory.stat.out", CONST_CACHE_MISS_NO_EXECUTE);
	m_CONST_CACHE_ACCESS = new COUNT_Stat("CONST_CACHE_ACCESS", "memory.stat.out", CONST_CACHE_ACCESS);
	m_TEXTURE_CACHE_HIT = new COUNT_Stat("TEXTURE_CACHE_HIT", "memory.stat.out", TEXTURE_CACHE_HIT);
	m_TEXTURE_CACHE_MISS = new COUNT_Stat("TEXTURE_CACHE_MISS", "memory.stat.out", TEXTURE_CACHE_MISS);
	m_TEXTURE_CACHE_NO_EXECUTE = new COUNT_Stat("TEXTURE_CACHE_NO_EXECUTE", "memory.stat.out", TEXTURE_CACHE_NO_EXECUTE);
	m_TEXTURE_CACHE_ACCESS = new COUNT_Stat("TEXTURE_CACHE_ACCESS", "memory.stat.out", TEXTURE_CACHE_ACCESS);
	m_SHARED_MEM_INST = new COUNT_Stat("SHARED_MEM_INST", "memory.stat.out", SHARED_MEM_INST);
	m_SHARED_MEM_ACCESS = new COUNT_Stat("SHARED_MEM_ACCESS", "memory.stat.out", SHARED_MEM_ACCESS);
	m_DIST_LD_NO_FORWARD = new DIST_Stat("LD_NO_FORWARD", "memory.stat.out", LD_NO_FORWARD, procStat);
	m_LD_NO_FORWARD = (COUNT_Stat*) new DISTMember_Stat("LD_NO_FORWARD", "memory.stat.out", LD_NO_FORWARD, LD_NO_FORWARD);
	m_FORWARDED_LD = (COUNT_Stat*) new DISTMember_Stat("FORWARDED_LD", "memory.stat.out", FORWARDED_LD, LD_NO_FORWARD);
	m_MEM_STALL_CYCLE = new COUNT_Stat("MEM_STALL_CYCLE", "memory.stat.out", MEM_STALL_CYCLE);
	m_CACHE_BANK_BUSY = new COUNT_Stat("CACHE_BANK_BUSY", "memory.stat.out", CACHE_BANK_BUSY);
	m_ICACHE_MISS_TOTAL = new COUNT_Stat("ICACHE_MISS_TOTAL", "memory.stat.out", ICACHE_MISS_TOTAL);
	m_ICACHE_FILL = new COUNT_Stat("ICACHE_FILL", "memory.stat.out", ICACHE_FILL);
	m_TOTAL_CAGE_PERIOD = new COUNT_Stat("TOTAL_CAGE_PERIOD", "memory.stat.out", TOTAL_CAGE_PERIOD);
	m_TOTAL_CAGE_APPL0 = new RATIO_Stat("TOTAL_CAGE_APPL0",  "memory.stat.out", TOTAL_CAGE_APPL0, TOTAL_CAGE_PERIOD, procStat);
	m_TOTAL_CAGE_APPL1 = new RATIO_Stat("TOTAL_CAGE_APPL1",  "memory.stat.out", TOTAL_CAGE_APPL1, TOTAL_CAGE_PERIOD, procStat);
	m_TOTAL_CAGE_APPL2 = new RATIO_Stat("TOTAL_CAGE_APPL2",  "memory.stat.out", TOTAL_CAGE_APPL2, TOTAL_CAGE_PERIOD, procStat);
	m_TOTAL_CAGE_APPL3 = new RATIO_Stat("TOTAL_CAGE_APPL3",  "memory.stat.out", TOTAL_CAGE_APPL3, TOTAL_CAGE_PERIOD, procStat);
	m_TOTAL_CAGE_APPL4 = new RATIO_Stat("TOTAL_CAGE_APPL4",  "memory.stat.out", TOTAL_CAGE_APPL4, TOTAL_CAGE_PERIOD, procStat);
	m_ABIP_AVG_RATIO_BASE = new COUNT_Stat("ABIP_AVG_RATIO_BASE", "memory.stat.out", ABIP_AVG_RATIO_BASE);
	m_ABIP_AVG_RATIO = new RATIO_Stat("ABIP_AVG_RATIO",  "memory.stat.out", ABIP_AVG_RATIO, ABIP_AVG_RATIO_BASE, procStat);
	m_NUM_STACK_ACCESS = new COUNT_Stat("NUM_STACK_ACCESS", "memory.stat.out", NUM_STACK_ACCESS);
	m_NUM_HEAP_ACCESS = new COUNT_Stat("NUM_HEAP_ACCESS", "memory.stat.out", NUM_HEAP_ACCESS);
	
	// ============= ../def/network.stat.def =============
	m_TOTAL_PACKET_CPU = new COUNT_Stat("TOTAL_PACKET_CPU", "network.stat.out", TOTAL_PACKET_CPU);
	m_TOTAL_PACKET_GPU = new COUNT_Stat("TOTAL_PACKET_GPU", "network.stat.out", TOTAL_PACKET_GPU);
	m_NOC_AVG_LATENCY_BASE = new COUNT_Stat("NOC_AVG_LATENCY_BASE", "network.stat.out", NOC_AVG_LATENCY_BASE);
	m_NOC_AVG_LATENCY_BASE_CPU = new COUNT_Stat("NOC_AVG_LATENCY_BASE_CPU", "network.stat.out", NOC_AVG_LATENCY_BASE_CPU);
	m_NOC_AVG_LATENCY_BASE_GPU = new COUNT_Stat("NOC_AVG_LATENCY_BASE_GPU", "network.stat.out", NOC_AVG_LATENCY_BASE_GPU);
	m_NOC_AVG_LATENCY = new RATIO_Stat("NOC_AVG_LATENCY",  "network.stat.out", NOC_AVG_LATENCY, NOC_AVG_LATENCY_BASE, procStat);
	m_NOC_AVG_LATENCY_CPU = new RATIO_Stat("NOC_AVG_LATENCY_CPU",  "network.stat.out", NOC_AVG_LATENCY_CPU, NOC_AVG_LATENCY_BASE_CPU, procStat);
	m_NOC_AVG_LATENCY_GPU = new RATIO_Stat("NOC_AVG_LATENCY_GPU",  "network.stat.out", NOC_AVG_LATENCY_GPU, NOC_AVG_LATENCY_BASE_GPU, procStat);
	m_NOC_AVG_ACTIVE_PACKET_BASE = new COUNT_Stat("NOC_AVG_ACTIVE_PACKET_BASE", "network.stat.out", NOC_AVG_ACTIVE_PACKET_BASE);
	m_NOC_AVG_ACTIVE_PACKET_BASE_CPU = new COUNT_Stat("NOC_AVG_ACTIVE_PACKET_BASE_CPU", "network.stat.out", NOC_AVG_ACTIVE_PACKET_BASE_CPU);
	m_NOC_AVG_ACTIVE_PACKET_BASE_GPU = new COUNT_Stat("NOC_AVG_ACTIVE_PACKET_BASE_GPU", "network.stat.out", NOC_AVG_ACTIVE_PACKET_BASE_GPU);
	m_NOC_AVG_ACTIVE_PACKET = new RATIO_Stat("NOC_AVG_ACTIVE_PACKET",  "network.stat.out", NOC_AVG_ACTIVE_PACKET, NOC_AVG_ACTIVE_PACKET_BASE, procStat);
	m_NOC_AVG_ACTIVE_PACKET_CPU = new RATIO_Stat("NOC_AVG_ACTIVE_PACKET_CPU",  "network.stat.out", NOC_AVG_ACTIVE_PACKET_CPU, NOC_AVG_ACTIVE_PACKET_BASE_CPU, procStat);
	m_NOC_AVG_ACTIVE_PACKET_GPU = new RATIO_Stat("NOC_AVG_ACTIVE_PACKET_GPU",  "network.stat.out", NOC_AVG_ACTIVE_PACKET_GPU, NOC_AVG_ACTIVE_PACKET_BASE_GPU, procStat);
	m_NOC_IDLE_CHANNEL = new COUNT_Stat("NOC_IDLE_CHANNEL", "network.stat.out", NOC_IDLE_CHANNEL);
	m_NOC_IDLE_CHANNEL_CPU = new COUNT_Stat("NOC_IDLE_CHANNEL_CPU", "network.stat.out", NOC_IDLE_CHANNEL_CPU);
	m_NOC_IDLE_CHANNEL_GPU = new COUNT_Stat("NOC_IDLE_CHANNEL_GPU", "network.stat.out", NOC_IDLE_CHANNEL_GPU);
	m_NOC_IDLE_CHANNEL_L3 = new COUNT_Stat("NOC_IDLE_CHANNEL_L3", "network.stat.out", NOC_IDLE_CHANNEL_L3);
	m_NOC_IDLE_CHANNEL_MC = new COUNT_Stat("NOC_IDLE_CHANNEL_MC", "network.stat.out", NOC_IDLE_CHANNEL_MC);
	m_NOC_AVG_WAIT_IN_ROUTER_BASE = new COUNT_Stat("NOC_AVG_WAIT_IN_ROUTER_BASE", "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_BASE);
	m_NOC_AVG_WAIT_IN_ROUTER_BASE_CPU = new COUNT_Stat("NOC_AVG_WAIT_IN_ROUTER_BASE_CPU", "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_BASE_CPU);
	m_NOC_AVG_WAIT_IN_ROUTER_BASE_GPU = new COUNT_Stat("NOC_AVG_WAIT_IN_ROUTER_BASE_GPU", "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_BASE_GPU);
	m_NOC_AVG_WAIT_IN_ROUTER_BASE_L3 = new COUNT_Stat("NOC_AVG_WAIT_IN_ROUTER_BASE_L3", "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_BASE_L3);
	m_NOC_AVG_WAIT_IN_ROUTER_BASE_MC = new COUNT_Stat("NOC_AVG_WAIT_IN_ROUTER_BASE_MC", "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_BASE_MC);
	m_NOC_AVG_WAIT_IN_ROUTER = new RATIO_Stat("NOC_AVG_WAIT_IN_ROUTER",  "network.stat.out", NOC_AVG_WAIT_IN_ROUTER, NOC_AVG_WAIT_IN_ROUTER_BASE, procStat);
	m_NOC_AVG_WAIT_IN_ROUTER_CPU = new RATIO_Stat("NOC_AVG_WAIT_IN_ROUTER_CPU",  "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_CPU, NOC_AVG_WAIT_IN_ROUTER_BASE_CPU, procStat);
	m_NOC_AVG_WAIT_IN_ROUTER_GPU = new RATIO_Stat("NOC_AVG_WAIT_IN_ROUTER_GPU",  "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_GPU, NOC_AVG_WAIT_IN_ROUTER_BASE_GPU, procStat);
	m_NOC_AVG_WAIT_IN_ROUTER_L3 = new RATIO_Stat("NOC_AVG_WAIT_IN_ROUTER_L3",  "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_L3, NOC_AVG_WAIT_IN_ROUTER_BASE_L3, procStat);
	m_NOC_AVG_WAIT_IN_ROUTER_MC = new RATIO_Stat("NOC_AVG_WAIT_IN_ROUTER_MC",  "network.stat.out", NOC_AVG_WAIT_IN_ROUTER_MC, NOC_AVG_WAIT_IN_ROUTER_BASE_MC, procStat);
	m_NOC_LINK_ACTIVE = new COUNT_Stat("NOC_LINK_ACTIVE", "network.stat.out", NOC_LINK_ACTIVE);
	
	// ============= ../def/power_units.stat.def =============
	m_POWER_BLOCK_STATES_R = new COUNT_Stat("POWER_BLOCK_STATES_R", "power_units.stat.out", POWER_BLOCK_STATES_R);
	m_POWER_BLOCK_STATES_W = new COUNT_Stat("POWER_BLOCK_STATES_W", "power_units.stat.out", POWER_BLOCK_STATES_W);
	m_POWER_FETCH_QUEUE_R = new COUNT_Stat("POWER_FETCH_QUEUE_R", "power_units.stat.out", POWER_FETCH_QUEUE_R);
	m_POWER_FETCH_QUEUE_W = new COUNT_Stat("POWER_FETCH_QUEUE_W", "power_units.stat.out", POWER_FETCH_QUEUE_W);
	m_POWER_INST_QUEUE_R = new COUNT_Stat("POWER_INST_QUEUE_R", "power_units.stat.out", POWER_INST_QUEUE_R);
	m_POWER_INST_QUEUE_W = new COUNT_Stat("POWER_INST_QUEUE_W", "power_units.stat.out", POWER_INST_QUEUE_W);
	m_POWER_BR_PRED_R = new COUNT_Stat("POWER_BR_PRED_R", "power_units.stat.out", POWER_BR_PRED_R);
	m_POWER_BR_PRED_W = new COUNT_Stat("POWER_BR_PRED_W", "power_units.stat.out", POWER_BR_PRED_W);
	m_POWER_RAS_R = new COUNT_Stat("POWER_RAS_R", "power_units.stat.out", POWER_RAS_R);
	m_POWER_RAS_W = new COUNT_Stat("POWER_RAS_W", "power_units.stat.out", POWER_RAS_W);
	m_POWER_ICACHE_R = new COUNT_Stat("POWER_ICACHE_R", "power_units.stat.out", POWER_ICACHE_R);
	m_POWER_ICACHE_W = new COUNT_Stat("POWER_ICACHE_W", "power_units.stat.out", POWER_ICACHE_W);
	m_POWER_ICACHE_R_TAG = new COUNT_Stat("POWER_ICACHE_R_TAG", "power_units.stat.out", POWER_ICACHE_R_TAG);
	m_POWER_ICACHE_MISS_BUF_R = new COUNT_Stat("POWER_ICACHE_MISS_BUF_R", "power_units.stat.out", POWER_ICACHE_MISS_BUF_R);
	m_POWER_ICACHE_MISS_BUF_W = new COUNT_Stat("POWER_ICACHE_MISS_BUF_W", "power_units.stat.out", POWER_ICACHE_MISS_BUF_W);
	m_POWER_ICACHE_MISS_BUF_R_TAG = new COUNT_Stat("POWER_ICACHE_MISS_BUF_R_TAG", "power_units.stat.out", POWER_ICACHE_MISS_BUF_R_TAG);
	m_POWER_ICACHE_MISS_BUF_W_TAG = new COUNT_Stat("POWER_ICACHE_MISS_BUF_W_TAG", "power_units.stat.out", POWER_ICACHE_MISS_BUF_W_TAG);
	m_POWER_ICACHE_TOT_ACC = new COUNT_Stat("POWER_ICACHE_TOT_ACC", "power_units.stat.out", POWER_ICACHE_TOT_ACC);
	m_POWER_ICACHE_CONF = new COUNT_Stat("POWER_ICACHE_CONF", "power_units.stat.out", POWER_ICACHE_CONF);
	m_POWER_INST_DECODER_R = new COUNT_Stat("POWER_INST_DECODER_R", "power_units.stat.out", POWER_INST_DECODER_R);
	m_POWER_INST_DECODER_W = new COUNT_Stat("POWER_INST_DECODER_W", "power_units.stat.out", POWER_INST_DECODER_W);
	m_POWER_MICRO_OP_SEQ_R = new COUNT_Stat("POWER_MICRO_OP_SEQ_R", "power_units.stat.out", POWER_MICRO_OP_SEQ_R);
	m_POWER_MICRO_OP_SEQ_W = new COUNT_Stat("POWER_MICRO_OP_SEQ_W", "power_units.stat.out", POWER_MICRO_OP_SEQ_W);
	m_POWER_OPERAND_DECODER_R = new COUNT_Stat("POWER_OPERAND_DECODER_R", "power_units.stat.out", POWER_OPERAND_DECODER_R);
	m_POWER_OPERAND_DECODER_W = new COUNT_Stat("POWER_OPERAND_DECODER_W", "power_units.stat.out", POWER_OPERAND_DECODER_W);
	m_POWER_UOP_QUEUE_R = new COUNT_Stat("POWER_UOP_QUEUE_R", "power_units.stat.out", POWER_UOP_QUEUE_R);
	m_POWER_UOP_QUEUE_W = new COUNT_Stat("POWER_UOP_QUEUE_W", "power_units.stat.out", POWER_UOP_QUEUE_W);
	m_POWER_REG_RENAMING_TABLE_R = new COUNT_Stat("POWER_REG_RENAMING_TABLE_R", "power_units.stat.out", POWER_REG_RENAMING_TABLE_R);
	m_POWER_REG_RENAMING_TABLE_W = new COUNT_Stat("POWER_REG_RENAMING_TABLE_W", "power_units.stat.out", POWER_REG_RENAMING_TABLE_W);
	m_POWER_DEP_CHECK_LOGIC_R = new COUNT_Stat("POWER_DEP_CHECK_LOGIC_R", "power_units.stat.out", POWER_DEP_CHECK_LOGIC_R);
	m_POWER_FREELIST_R = new COUNT_Stat("POWER_FREELIST_R", "power_units.stat.out", POWER_FREELIST_R);
	m_POWER_FREELIST_W = new COUNT_Stat("POWER_FREELIST_W", "power_units.stat.out", POWER_FREELIST_W);
	m_POWER_RESERVATION_STATION_R = new COUNT_Stat("POWER_RESERVATION_STATION_R", "power_units.stat.out", POWER_RESERVATION_STATION_R);
	m_POWER_RESERVATION_STATION_W = new COUNT_Stat("POWER_RESERVATION_STATION_W", "power_units.stat.out", POWER_RESERVATION_STATION_W);
	m_POWER_RESERVATION_STATION_R_TAG = new COUNT_Stat("POWER_RESERVATION_STATION_R_TAG", "power_units.stat.out", POWER_RESERVATION_STATION_R_TAG);
	m_POWER_RESERVATION_STATION_W_TAG = new COUNT_Stat("POWER_RESERVATION_STATION_W_TAG", "power_units.stat.out", POWER_RESERVATION_STATION_W_TAG);
	m_POWER_INST_ISSUE_SEL_LOGIC_R = new COUNT_Stat("POWER_INST_ISSUE_SEL_LOGIC_R", "power_units.stat.out", POWER_INST_ISSUE_SEL_LOGIC_R);
	m_POWER_INST_ISSUE_SEL_LOGIC_W = new COUNT_Stat("POWER_INST_ISSUE_SEL_LOGIC_W", "power_units.stat.out", POWER_INST_ISSUE_SEL_LOGIC_W);
	m_POWER_PAYLOAD_RAM_R = new COUNT_Stat("POWER_PAYLOAD_RAM_R", "power_units.stat.out", POWER_PAYLOAD_RAM_R);
	m_POWER_PAYLOAD_RAM_W = new COUNT_Stat("POWER_PAYLOAD_RAM_W", "power_units.stat.out", POWER_PAYLOAD_RAM_W);
	m_POWER_EX_ALU_R = new COUNT_Stat("POWER_EX_ALU_R", "power_units.stat.out", POWER_EX_ALU_R);
	m_POWER_EX_FPU_R = new COUNT_Stat("POWER_EX_FPU_R", "power_units.stat.out", POWER_EX_FPU_R);
	m_POWER_EX_MUL_R = new COUNT_Stat("POWER_EX_MUL_R", "power_units.stat.out", POWER_EX_MUL_R);
	m_POWER_EX_SFU_R = new COUNT_Stat("POWER_EX_SFU_R", "power_units.stat.out", POWER_EX_SFU_R);
	m_POWER_REORDER_BUF_R = new COUNT_Stat("POWER_REORDER_BUF_R", "power_units.stat.out", POWER_REORDER_BUF_R);
	m_POWER_REORDER_BUF_W = new COUNT_Stat("POWER_REORDER_BUF_W", "power_units.stat.out", POWER_REORDER_BUF_W);
	m_POWER_INST_COMMIT_SEL_LOGIC_R = new COUNT_Stat("POWER_INST_COMMIT_SEL_LOGIC_R", "power_units.stat.out", POWER_INST_COMMIT_SEL_LOGIC_R);
	m_POWER_INST_COMMIT_SEL_LOGIC_W = new COUNT_Stat("POWER_INST_COMMIT_SEL_LOGIC_W", "power_units.stat.out", POWER_INST_COMMIT_SEL_LOGIC_W);
	m_POWER_FP_RENAME_R = new COUNT_Stat("POWER_FP_RENAME_R", "power_units.stat.out", POWER_FP_RENAME_R);
	m_POWER_FP_RENAME_W = new COUNT_Stat("POWER_FP_RENAME_W", "power_units.stat.out", POWER_FP_RENAME_W);
	m_POWER_LOAD_QUEUE_R = new COUNT_Stat("POWER_LOAD_QUEUE_R", "power_units.stat.out", POWER_LOAD_QUEUE_R);
	m_POWER_LOAD_QUEUE_W = new COUNT_Stat("POWER_LOAD_QUEUE_W", "power_units.stat.out", POWER_LOAD_QUEUE_W);
	m_POWER_LOAD_QUEUE_R_TAG = new COUNT_Stat("POWER_LOAD_QUEUE_R_TAG", "power_units.stat.out", POWER_LOAD_QUEUE_R_TAG);
	m_POWER_LOAD_QUEUE_W_TAG = new COUNT_Stat("POWER_LOAD_QUEUE_W_TAG", "power_units.stat.out", POWER_LOAD_QUEUE_W_TAG);
	m_POWER_STORE_QUEUE_R = new COUNT_Stat("POWER_STORE_QUEUE_R", "power_units.stat.out", POWER_STORE_QUEUE_R);
	m_POWER_STORE_QUEUE_W = new COUNT_Stat("POWER_STORE_QUEUE_W", "power_units.stat.out", POWER_STORE_QUEUE_W);
	m_POWER_STORE_QUEUE_R_TAG = new COUNT_Stat("POWER_STORE_QUEUE_R_TAG", "power_units.stat.out", POWER_STORE_QUEUE_R_TAG);
	m_POWER_STORE_QUEUE_W_TAG = new COUNT_Stat("POWER_STORE_QUEUE_W_TAG", "power_units.stat.out", POWER_STORE_QUEUE_W_TAG);
	m_POWER_DATA_TLB_R = new COUNT_Stat("POWER_DATA_TLB_R", "power_units.stat.out", POWER_DATA_TLB_R);
	m_POWER_DATA_TLB_W = new COUNT_Stat("POWER_DATA_TLB_W", "power_units.stat.out", POWER_DATA_TLB_W);
	m_POWER_DATA_TLB_R_TAG = new COUNT_Stat("POWER_DATA_TLB_R_TAG", "power_units.stat.out", POWER_DATA_TLB_R_TAG);
	m_POWER_DATA_TLB_W_TAG = new COUNT_Stat("POWER_DATA_TLB_W_TAG", "power_units.stat.out", POWER_DATA_TLB_W_TAG);
	m_POWER_INT_REGFILE_R = new COUNT_Stat("POWER_INT_REGFILE_R", "power_units.stat.out", POWER_INT_REGFILE_R);
	m_POWER_INT_REGFILE_W = new COUNT_Stat("POWER_INT_REGFILE_W", "power_units.stat.out", POWER_INT_REGFILE_W);
	m_POWER_FP_REGFILE_R = new COUNT_Stat("POWER_FP_REGFILE_R", "power_units.stat.out", POWER_FP_REGFILE_R);
	m_POWER_FP_REGFILE_W = new COUNT_Stat("POWER_FP_REGFILE_W", "power_units.stat.out", POWER_FP_REGFILE_W);
	m_POWER_GP_REGISTER_R = new COUNT_Stat("POWER_GP_REGISTER_R", "power_units.stat.out", POWER_GP_REGISTER_R);
	m_POWER_GP_REGISTER_W = new COUNT_Stat("POWER_GP_REGISTER_W", "power_units.stat.out", POWER_GP_REGISTER_W);
	m_POWER_FP_REGISTER_R = new COUNT_Stat("POWER_FP_REGISTER_R", "power_units.stat.out", POWER_FP_REGISTER_R);
	m_POWER_FP_REGISTER_W = new COUNT_Stat("POWER_FP_REGISTER_W", "power_units.stat.out", POWER_FP_REGISTER_W);
	m_POWER_SEGMENT_REGISTER_R = new COUNT_Stat("POWER_SEGMENT_REGISTER_R", "power_units.stat.out", POWER_SEGMENT_REGISTER_R);
	m_POWER_SEGMENT_REGISTER_W = new COUNT_Stat("POWER_SEGMENT_REGISTER_W", "power_units.stat.out", POWER_SEGMENT_REGISTER_W);
	m_POWER_CONTROL_REGISTER_R = new COUNT_Stat("POWER_CONTROL_REGISTER_R", "power_units.stat.out", POWER_CONTROL_REGISTER_R);
	m_POWER_CONTROL_REGISTER_W = new COUNT_Stat("POWER_CONTROL_REGISTER_W", "power_units.stat.out", POWER_CONTROL_REGISTER_W);
	m_POWER_FLAG_REGISTER_R = new COUNT_Stat("POWER_FLAG_REGISTER_R", "power_units.stat.out", POWER_FLAG_REGISTER_R);
	m_POWER_FLAG_REGISTER_W = new COUNT_Stat("POWER_FLAG_REGISTER_W", "power_units.stat.out", POWER_FLAG_REGISTER_W);
	m_POWER_EXEC_BYPASS = new COUNT_Stat("POWER_EXEC_BYPASS", "power_units.stat.out", POWER_EXEC_BYPASS);
	m_POWER_LOAD_BYPASS = new COUNT_Stat("POWER_LOAD_BYPASS", "power_units.stat.out", POWER_LOAD_BYPASS);
	m_POWER_PIPELINE = new COUNT_Stat("POWER_PIPELINE", "power_units.stat.out", POWER_PIPELINE);
	m_POWER_DCACHE_MISS_BUF_R = new COUNT_Stat("POWER_DCACHE_MISS_BUF_R", "power_units.stat.out", POWER_DCACHE_MISS_BUF_R);
	m_POWER_DCACHE_MISS_BUF_R_TAG = new COUNT_Stat("POWER_DCACHE_MISS_BUF_R_TAG", "power_units.stat.out", POWER_DCACHE_MISS_BUF_R_TAG);
	m_POWER_DCACHE_MISS_BUF_W = new COUNT_Stat("POWER_DCACHE_MISS_BUF_W", "power_units.stat.out", POWER_DCACHE_MISS_BUF_W);
	m_POWER_DCACHE_MISS_BUF_W_TAG = new COUNT_Stat("POWER_DCACHE_MISS_BUF_W_TAG", "power_units.stat.out", POWER_DCACHE_MISS_BUF_W_TAG);
	m_POWER_DCACHE_LINEFILL_BUF_R = new COUNT_Stat("POWER_DCACHE_LINEFILL_BUF_R", "power_units.stat.out", POWER_DCACHE_LINEFILL_BUF_R);
	m_POWER_L2CACHE_LINEFILL_BUF_R = new COUNT_Stat("POWER_L2CACHE_LINEFILL_BUF_R", "power_units.stat.out", POWER_L2CACHE_LINEFILL_BUF_R);
	m_POWER_L3CACHE_LINEFILL_BUF_R = new COUNT_Stat("POWER_L3CACHE_LINEFILL_BUF_R", "power_units.stat.out", POWER_L3CACHE_LINEFILL_BUF_R);
	m_POWER_DCACHE_LINEFILL_BUF_W = new COUNT_Stat("POWER_DCACHE_LINEFILL_BUF_W", "power_units.stat.out", POWER_DCACHE_LINEFILL_BUF_W);
	m_POWER_L2CACHE_LINEFILL_BUF_W = new COUNT_Stat("POWER_L2CACHE_LINEFILL_BUF_W", "power_units.stat.out", POWER_L2CACHE_LINEFILL_BUF_W);
	m_POWER_L3CACHE_LINEFILL_BUF_W = new COUNT_Stat("POWER_L3CACHE_LINEFILL_BUF_W", "power_units.stat.out", POWER_L3CACHE_LINEFILL_BUF_W);
	m_POWER_DCACHE_LINEFILL_BUF_R_TAG = new COUNT_Stat("POWER_DCACHE_LINEFILL_BUF_R_TAG", "power_units.stat.out", POWER_DCACHE_LINEFILL_BUF_R_TAG);
	m_POWER_L2CACHE_LINEFILL_BUF_R_TAG = new COUNT_Stat("POWER_L2CACHE_LINEFILL_BUF_R_TAG", "power_units.stat.out", POWER_L2CACHE_LINEFILL_BUF_R_TAG);
	m_POWER_L3CACHE_LINEFILL_BUF_R_TAG = new COUNT_Stat("POWER_L3CACHE_LINEFILL_BUF_R_TAG", "power_units.stat.out", POWER_L3CACHE_LINEFILL_BUF_R_TAG);
	m_POWER_DCACHE_LINEFILL_BUF_W_TAG = new COUNT_Stat("POWER_DCACHE_LINEFILL_BUF_W_TAG", "power_units.stat.out", POWER_DCACHE_LINEFILL_BUF_W_TAG);
	m_POWER_DCACHE_WB_BUF_R = new COUNT_Stat("POWER_DCACHE_WB_BUF_R", "power_units.stat.out", POWER_DCACHE_WB_BUF_R);
	m_POWER_L2CACHE_WB_BUF_R = new COUNT_Stat("POWER_L2CACHE_WB_BUF_R", "power_units.stat.out", POWER_L2CACHE_WB_BUF_R);
	m_POWER_L3CACHE_WB_BUF_R = new COUNT_Stat("POWER_L3CACHE_WB_BUF_R", "power_units.stat.out", POWER_L3CACHE_WB_BUF_R);
	m_POWER_DCACHE_WB_BUF_W = new COUNT_Stat("POWER_DCACHE_WB_BUF_W", "power_units.stat.out", POWER_DCACHE_WB_BUF_W);
	m_POWER_L2CACHE_WB_BUF_W = new COUNT_Stat("POWER_L2CACHE_WB_BUF_W", "power_units.stat.out", POWER_L2CACHE_WB_BUF_W);
	m_POWER_L3CACHE_WB_BUF_W = new COUNT_Stat("POWER_L3CACHE_WB_BUF_W", "power_units.stat.out", POWER_L3CACHE_WB_BUF_W);
	m_POWER_DCACHE_WB_BUF_R_TAG = new COUNT_Stat("POWER_DCACHE_WB_BUF_R_TAG", "power_units.stat.out", POWER_DCACHE_WB_BUF_R_TAG);
	m_POWER_L2CACHE_WB_BUF_R_TAG = new COUNT_Stat("POWER_L2CACHE_WB_BUF_R_TAG", "power_units.stat.out", POWER_L2CACHE_WB_BUF_R_TAG);
	m_POWER_L3CACHE_WB_BUF_R_TAG = new COUNT_Stat("POWER_L3CACHE_WB_BUF_R_TAG", "power_units.stat.out", POWER_L3CACHE_WB_BUF_R_TAG);
	m_POWER_DCACHE_WB_BUF_W_TAG = new COUNT_Stat("POWER_DCACHE_WB_BUF_W_TAG", "power_units.stat.out", POWER_DCACHE_WB_BUF_W_TAG);
	m_POWER_DCACHE_R = new COUNT_Stat("POWER_DCACHE_R", "power_units.stat.out", POWER_DCACHE_R);
	m_POWER_L2CACHE_R = new COUNT_Stat("POWER_L2CACHE_R", "power_units.stat.out", POWER_L2CACHE_R);
	m_POWER_L3CACHE_R = new COUNT_Stat("POWER_L3CACHE_R", "power_units.stat.out", POWER_L3CACHE_R);
	m_POWER_DCACHE_W = new COUNT_Stat("POWER_DCACHE_W", "power_units.stat.out", POWER_DCACHE_W);
	m_POWER_L2CACHE_W = new COUNT_Stat("POWER_L2CACHE_W", "power_units.stat.out", POWER_L2CACHE_W);
	m_POWER_L3CACHE_W = new COUNT_Stat("POWER_L3CACHE_W", "power_units.stat.out", POWER_L3CACHE_W);
	m_POWER_DCACHE_R_TAG = new COUNT_Stat("POWER_DCACHE_R_TAG", "power_units.stat.out", POWER_DCACHE_R_TAG);
	m_POWER_L2CACHE_R_TAG = new COUNT_Stat("POWER_L2CACHE_R_TAG", "power_units.stat.out", POWER_L2CACHE_R_TAG);
	m_POWER_L3CACHE_R_TAG = new COUNT_Stat("POWER_L3CACHE_R_TAG", "power_units.stat.out", POWER_L3CACHE_R_TAG);
	m_POWER_MC_R = new COUNT_Stat("POWER_MC_R", "power_units.stat.out", POWER_MC_R);
	m_POWER_MC_W = new COUNT_Stat("POWER_MC_W", "power_units.stat.out", POWER_MC_W);
	m_POWER_CONST_CACHE_R = new COUNT_Stat("POWER_CONST_CACHE_R", "power_units.stat.out", POWER_CONST_CACHE_R);
	m_POWER_CONST_CACHE_W = new COUNT_Stat("POWER_CONST_CACHE_W", "power_units.stat.out", POWER_CONST_CACHE_W);
	m_POWER_CONST_CACHE_R_TAG = new COUNT_Stat("POWER_CONST_CACHE_R_TAG", "power_units.stat.out", POWER_CONST_CACHE_R_TAG);
	m_POWER_CONST_CACHE_W_TAG = new COUNT_Stat("POWER_CONST_CACHE_W_TAG", "power_units.stat.out", POWER_CONST_CACHE_W_TAG);
	m_POWER_TEXTURE_CACHE_R = new COUNT_Stat("POWER_TEXTURE_CACHE_R", "power_units.stat.out", POWER_TEXTURE_CACHE_R);
	m_POWER_TEXTURE_CACHE_W = new COUNT_Stat("POWER_TEXTURE_CACHE_W", "power_units.stat.out", POWER_TEXTURE_CACHE_W);
	m_POWER_TEXTURE_CACHE_R_TAG = new COUNT_Stat("POWER_TEXTURE_CACHE_R_TAG", "power_units.stat.out", POWER_TEXTURE_CACHE_R_TAG);
	m_POWER_TEXTURE_CACHE_W_TAG = new COUNT_Stat("POWER_TEXTURE_CACHE_W_TAG", "power_units.stat.out", POWER_TEXTURE_CACHE_W_TAG);
	m_POWER_SHARED_MEM_R = new COUNT_Stat("POWER_SHARED_MEM_R", "power_units.stat.out", POWER_SHARED_MEM_R);
	m_POWER_SHARED_MEM_W = new COUNT_Stat("POWER_SHARED_MEM_W", "power_units.stat.out", POWER_SHARED_MEM_W);
	m_POWER_SHARED_MEM_R_TAG = new COUNT_Stat("POWER_SHARED_MEM_R_TAG", "power_units.stat.out", POWER_SHARED_MEM_R_TAG);
	m_POWER_SHARED_MEM_W_TAG = new COUNT_Stat("POWER_SHARED_MEM_W_TAG", "power_units.stat.out", POWER_SHARED_MEM_W_TAG);
	
	// ============= ../def/pref.stat.def =============
	m_DIST_PREF_ACC_1 = new DIST_Stat("PREF_ACC_1", "pref.stat.out", PREF_ACC_1, procStat);
	m_PREF_ACC_1 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_1", "pref.stat.out", PREF_ACC_1, PREF_ACC_1);
	m_PREF_ACC_2 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_2", "pref.stat.out", PREF_ACC_2, PREF_ACC_1);
	m_PREF_ACC_3 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_3", "pref.stat.out", PREF_ACC_3, PREF_ACC_1);
	m_PREF_ACC_4 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_4", "pref.stat.out", PREF_ACC_4, PREF_ACC_1);
	m_PREF_ACC_5 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_5", "pref.stat.out", PREF_ACC_5, PREF_ACC_1);
	m_PREF_ACC_6 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_6", "pref.stat.out", PREF_ACC_6, PREF_ACC_1);
	m_PREF_ACC_7 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_7", "pref.stat.out", PREF_ACC_7, PREF_ACC_1);
	m_PREF_ACC_8 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_8", "pref.stat.out", PREF_ACC_8, PREF_ACC_1);
	m_PREF_ACC_9 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_9", "pref.stat.out", PREF_ACC_9, PREF_ACC_1);
	m_PREF_ACC_10 = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC_10", "pref.stat.out", PREF_ACC_10, PREF_ACC_1);
	m_DIST_PREF_TIMELY_1 = new DIST_Stat("PREF_TIMELY_1", "pref.stat.out", PREF_TIMELY_1, procStat);
	m_PREF_TIMELY_1 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_1", "pref.stat.out", PREF_TIMELY_1, PREF_TIMELY_1);
	m_PREF_TIMELY_2 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_2", "pref.stat.out", PREF_TIMELY_2, PREF_TIMELY_1);
	m_PREF_TIMELY_3 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_3", "pref.stat.out", PREF_TIMELY_3, PREF_TIMELY_1);
	m_PREF_TIMELY_4 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_4", "pref.stat.out", PREF_TIMELY_4, PREF_TIMELY_1);
	m_PREF_TIMELY_5 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_5", "pref.stat.out", PREF_TIMELY_5, PREF_TIMELY_1);
	m_PREF_TIMELY_6 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_6", "pref.stat.out", PREF_TIMELY_6, PREF_TIMELY_1);
	m_PREF_TIMELY_7 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_7", "pref.stat.out", PREF_TIMELY_7, PREF_TIMELY_1);
	m_PREF_TIMELY_8 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_8", "pref.stat.out", PREF_TIMELY_8, PREF_TIMELY_1);
	m_PREF_TIMELY_9 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_9", "pref.stat.out", PREF_TIMELY_9, PREF_TIMELY_1);
	m_PREF_TIMELY_10 = (COUNT_Stat*) new DISTMember_Stat("PREF_TIMELY_10", "pref.stat.out", PREF_TIMELY_10, PREF_TIMELY_1);
	m_DIST_PREF_POL_1 = new DIST_Stat("PREF_POL_1", "pref.stat.out", PREF_POL_1, procStat);
	m_PREF_POL_1 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_1", "pref.stat.out", PREF_POL_1, PREF_POL_1);
	m_PREF_POL_2 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_2", "pref.stat.out", PREF_POL_2, PREF_POL_1);
	m_PREF_POL_3 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_3", "pref.stat.out", PREF_POL_3, PREF_POL_1);
	m_PREF_POL_4 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_4", "pref.stat.out", PREF_POL_4, PREF_POL_1);
	m_PREF_POL_5 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_5", "pref.stat.out", PREF_POL_5, PREF_POL_1);
	m_PREF_POL_6 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_6", "pref.stat.out", PREF_POL_6, PREF_POL_1);
	m_PREF_POL_7 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_7", "pref.stat.out", PREF_POL_7, PREF_POL_1);
	m_PREF_POL_8 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_8", "pref.stat.out", PREF_POL_8, PREF_POL_1);
	m_PREF_POL_9 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_9", "pref.stat.out", PREF_POL_9, PREF_POL_1);
	m_PREF_POL_10 = (COUNT_Stat*) new DISTMember_Stat("PREF_POL_10", "pref.stat.out", PREF_POL_10, PREF_POL_1);
	m_DIST_PREF_ACC1_HT_HP = new DIST_Stat("PREF_ACC1_HT_HP", "pref.stat.out", PREF_ACC1_HT_HP, procStat);
	m_PREF_ACC1_HT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC1_HT_HP", "pref.stat.out", PREF_ACC1_HT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC1_HT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC1_HT_LP", "pref.stat.out", PREF_ACC1_HT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC1_LT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC1_LT_HP", "pref.stat.out", PREF_ACC1_LT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC1_LT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC1_LT_LP", "pref.stat.out", PREF_ACC1_LT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC2_HT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC2_HT_HP", "pref.stat.out", PREF_ACC2_HT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC2_HT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC2_HT_LP", "pref.stat.out", PREF_ACC2_HT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC2_LT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC2_LT_HP", "pref.stat.out", PREF_ACC2_LT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC2_LT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC2_LT_LP", "pref.stat.out", PREF_ACC2_LT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC3_HT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC3_HT_HP", "pref.stat.out", PREF_ACC3_HT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC3_HT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC3_HT_LP", "pref.stat.out", PREF_ACC3_HT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC3_LT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC3_LT_HP", "pref.stat.out", PREF_ACC3_LT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC3_LT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC3_LT_LP", "pref.stat.out", PREF_ACC3_LT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC4_HT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC4_HT_HP", "pref.stat.out", PREF_ACC4_HT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC4_HT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC4_HT_LP", "pref.stat.out", PREF_ACC4_HT_LP, PREF_ACC1_HT_HP);
	m_PREF_ACC4_LT_HP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC4_LT_HP", "pref.stat.out", PREF_ACC4_LT_HP, PREF_ACC1_HT_HP);
	m_PREF_ACC4_LT_LP = (COUNT_Stat*) new DISTMember_Stat("PREF_ACC4_LT_LP", "pref.stat.out", PREF_ACC4_LT_LP, PREF_ACC1_HT_HP);
	m_DIST_PREF_DISTANCE_1 = new DIST_Stat("PREF_DISTANCE_1", "pref.stat.out", PREF_DISTANCE_1, procStat);
	m_PREF_DISTANCE_1 = (COUNT_Stat*) new DISTMember_Stat("PREF_DISTANCE_1", "pref.stat.out", PREF_DISTANCE_1, PREF_DISTANCE_1);
	m_PREF_DISTANCE_2 = (COUNT_Stat*) new DISTMember_Stat("PREF_DISTANCE_2", "pref.stat.out", PREF_DISTANCE_2, PREF_DISTANCE_1);
	m_PREF_DISTANCE_3 = (COUNT_Stat*) new DISTMember_Stat("PREF_DISTANCE_3", "pref.stat.out", PREF_DISTANCE_3, PREF_DISTANCE_1);
	m_PREF_DISTANCE_4 = (COUNT_Stat*) new DISTMember_Stat("PREF_DISTANCE_4", "pref.stat.out", PREF_DISTANCE_4, PREF_DISTANCE_1);
	m_PREF_DISTANCE_5 = (COUNT_Stat*) new DISTMember_Stat("PREF_DISTANCE_5", "pref.stat.out", PREF_DISTANCE_5, PREF_DISTANCE_1);
	m_PREF_PFPOL = new COUNT_Stat("PREF_PFPOL", "pref.stat.out", PREF_PFPOL);
	m_PREF_DL0REQ_QUEUE_HIT_BY_DEMAND = new COUNT_Stat("PREF_DL0REQ_QUEUE_HIT_BY_DEMAND", "pref.stat.out", PREF_DL0REQ_QUEUE_HIT_BY_DEMAND);
	m_PREF_UL2REQ_QUEUE_HIT_BY_DEMAND = new COUNT_Stat("PREF_UL2REQ_QUEUE_HIT_BY_DEMAND", "pref.stat.out", PREF_UL2REQ_QUEUE_HIT_BY_DEMAND);
	m_PREF_DL0REQ_QUEUE_FULL = new COUNT_Stat("PREF_DL0REQ_QUEUE_FULL", "pref.stat.out", PREF_DL0REQ_QUEUE_FULL);
	m_PREF_UL2REQ_QUEUE_FULL = new COUNT_Stat("PREF_UL2REQ_QUEUE_FULL", "pref.stat.out", PREF_UL2REQ_QUEUE_FULL);
	m_PREF_UL2REQ_SEND_QUEUE_STALL = new COUNT_Stat("PREF_UL2REQ_SEND_QUEUE_STALL", "pref.stat.out", PREF_UL2REQ_SEND_QUEUE_STALL);
	m_PREF_UL2REQ_QUEUE_MATCHED_REQ = new COUNT_Stat("PREF_UL2REQ_QUEUE_MATCHED_REQ", "pref.stat.out", PREF_UL2REQ_QUEUE_MATCHED_REQ);
	m_PREF_DL0REQ_QUEUE_MATCHED_REQ = new COUNT_Stat("PREF_DL0REQ_QUEUE_MATCHED_REQ", "pref.stat.out", PREF_DL0REQ_QUEUE_MATCHED_REQ);
	m_PREF_UL2REQ_QUEUE_SENTREQ = new COUNT_Stat("PREF_UL2REQ_QUEUE_SENTREQ", "pref.stat.out", PREF_UL2REQ_QUEUE_SENTREQ);
	m_PREF_UNUSED_EVICT = new COUNT_Stat("PREF_UNUSED_EVICT", "pref.stat.out", PREF_UNUSED_EVICT);
	m_PREF_REGION_SENT = new COUNT_Stat("PREF_REGION_SENT", "pref.stat.out", PREF_REGION_SENT);
	m_PREF_REGION_USEFUL = new COUNT_Stat("PREF_REGION_USEFUL", "pref.stat.out", PREF_REGION_USEFUL);
	m_PREF_REGION_EVICT = new COUNT_Stat("PREF_REGION_EVICT", "pref.stat.out", PREF_REGION_EVICT);
	m_PREF_PHASE_OVERWRITE_PAGE = new COUNT_Stat("PREF_PHASE_OVERWRITE_PAGE", "pref.stat.out", PREF_PHASE_OVERWRITE_PAGE);
	m_PREF_UPDATE_COUNT = new COUNT_Stat("PREF_UPDATE_COUNT", "pref.stat.out", PREF_UPDATE_COUNT);
	m_DIST_PREF_HYBRID_SEL_0 = new DIST_Stat("PREF_HYBRID_SEL_0", "pref.stat.out", PREF_HYBRID_SEL_0, procStat);
	m_PREF_HYBRID_SEL_0 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_0", "pref.stat.out", PREF_HYBRID_SEL_0, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_1 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_1", "pref.stat.out", PREF_HYBRID_SEL_1, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_2 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_2", "pref.stat.out", PREF_HYBRID_SEL_2, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_3 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_3", "pref.stat.out", PREF_HYBRID_SEL_3, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_4 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_4", "pref.stat.out", PREF_HYBRID_SEL_4, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_5 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_5", "pref.stat.out", PREF_HYBRID_SEL_5, PREF_HYBRID_SEL_0);
	m_PREF_HYBRID_SEL_6 = (COUNT_Stat*) new DISTMember_Stat("PREF_HYBRID_SEL_6", "pref.stat.out", PREF_HYBRID_SEL_6, PREF_HYBRID_SEL_0);
	
	// ============= ../def/stream.stat.def =============
	m_DCACHE_PREF_HIT = new COUNT_Stat("DCACHE_PREF_HIT", "stream.stat.out", DCACHE_PREF_HIT);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE = new DIST_Stat("IFETCH_WB_FIRST_SCHEDULE", "stream.stat.out", IFETCH_WB_FIRST_SCHEDULE, procStat);
	m_IFETCH_WB_FIRST_SCHEDULE = (COUNT_Stat*) new DISTMember_Stat("IFETCH_WB_FIRST_SCHEDULE", "stream.stat.out", IFETCH_WB_FIRST_SCHEDULE, IFETCH_WB_FIRST_SCHEDULE);
	m_PREFETCH_LAST_SCHEDULE = (COUNT_Stat*) new DISTMember_Stat("PREFETCH_LAST_SCHEDULE", "stream.stat.out", PREFETCH_LAST_SCHEDULE, IFETCH_WB_FIRST_SCHEDULE);
	m_DEMAND_PASS_PREF_SCHEDULE = (COUNT_Stat*) new DISTMember_Stat("DEMAND_PASS_PREF_SCHEDULE", "stream.stat.out", DEMAND_PASS_PREF_SCHEDULE, IFETCH_WB_FIRST_SCHEDULE);
	m_DEMAND_PASS_LOW_OP_SCHEDULE = (COUNT_Stat*) new DISTMember_Stat("DEMAND_PASS_LOW_OP_SCHEDULE", "stream.stat.out", DEMAND_PASS_LOW_OP_SCHEDULE, IFETCH_WB_FIRST_SCHEDULE);
	m_DEMAND_LAST_SCHEDULE = (COUNT_Stat*) new DISTMember_Stat("DEMAND_LAST_SCHEDULE", "stream.stat.out", DEMAND_LAST_SCHEDULE, IFETCH_WB_FIRST_SCHEDULE);
	m_STREAM_BUFFER_REQ = new COUNT_Stat("STREAM_BUFFER_REQ", "stream.stat.out", STREAM_BUFFER_REQ);
	m_DIST_PREF_SEND_TO_MEM_REQ = new DIST_Stat("PREF_SEND_TO_MEM_REQ", "stream.stat.out", PREF_SEND_TO_MEM_REQ, procStat);
	m_PREF_SEND_TO_MEM_REQ = (COUNT_Stat*) new DISTMember_Stat("PREF_SEND_TO_MEM_REQ", "stream.stat.out", PREF_SEND_TO_MEM_REQ, PREF_SEND_TO_MEM_REQ);
	m_PREF_SEND_TO_MEM_REQ_FAIL = (COUNT_Stat*) new DISTMember_Stat("PREF_SEND_TO_MEM_REQ_FAIL", "stream.stat.out", PREF_SEND_TO_MEM_REQ_FAIL, PREF_SEND_TO_MEM_REQ);
	m_DIST_HIT_TRAIN_STREAM = new DIST_Stat("HIT_TRAIN_STREAM", "stream.stat.out", HIT_TRAIN_STREAM, procStat);
	m_HIT_TRAIN_STREAM = (COUNT_Stat*) new DISTMember_Stat("HIT_TRAIN_STREAM", "stream.stat.out", HIT_TRAIN_STREAM, HIT_TRAIN_STREAM);
	m_MISS_TRAIN_STREAM = (COUNT_Stat*) new DISTMember_Stat("MISS_TRAIN_STREAM", "stream.stat.out", MISS_TRAIN_STREAM, HIT_TRAIN_STREAM);
	m_STREAM_TRAIN_CREATE = new COUNT_Stat("STREAM_TRAIN_CREATE", "stream.stat.out", STREAM_TRAIN_CREATE);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q = new DIST_Stat("MEM_REQ_MISS_HWP_PREF_Q", "stream.stat.out", MEM_REQ_MISS_HWP_PREF_Q, procStat);
	m_MEM_REQ_MISS_HWP_PREF_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_HWP_PREF_Q", "stream.stat.out", MEM_REQ_MISS_HWP_PREF_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_SW_PREF_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_SW_PREF_Q", "stream.stat.out", MEM_REQ_MISS_SW_PREF_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_IFETCH_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_IFETCH_Q", "stream.stat.out", MEM_REQ_MISS_IFETCH_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_DFETCH_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_DFETCH_Q", "stream.stat.out", MEM_REQ_MISS_DFETCH_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_DSTORE_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_DSTORE_Q", "stream.stat.out", MEM_REQ_MISS_DSTORE_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_DPRF_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_DPRF_Q", "stream.stat.out", MEM_REQ_MISS_DPRF_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_MEM_REQ_MISS_WB_Q = (COUNT_Stat*) new DISTMember_Stat("MEM_REQ_MISS_WB_Q", "stream.stat.out", MEM_REQ_MISS_WB_Q, MEM_REQ_MISS_HWP_PREF_Q);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH = new DIST_Stat("PREF_HIT_BY_DEMAND_IFETCH", "stream.stat.out", PREF_HIT_BY_DEMAND_IFETCH, procStat);
	m_PREF_HIT_BY_DEMAND_IFETCH = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_IFETCH", "stream.stat.out", PREF_HIT_BY_DEMAND_IFETCH, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_DEMAND_DFETCH = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_DFETCH", "stream.stat.out", PREF_HIT_BY_DEMAND_DFETCH, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_DEMAND_DSTORE = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_DSTORE", "stream.stat.out", PREF_HIT_BY_DEMAND_DSTORE, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_DEMAND_IPREF = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_IPREF", "stream.stat.out", PREF_HIT_BY_DEMAND_IPREF, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_DEMAND_DPRF = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_DPRF", "stream.stat.out", PREF_HIT_BY_DEMAND_DPRF, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_DEMAND_WB = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_DEMAND_WB", "stream.stat.out", PREF_HIT_BY_DEMAND_WB, PREF_HIT_BY_DEMAND_IFETCH);
	m_PREF_HIT_BY_PREF = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_BY_PREF", "stream.stat.out", PREF_HIT_BY_PREF, PREF_HIT_BY_DEMAND_IFETCH);
	m_DIST_PREF_HIT_DEMAND_IFETCH = new DIST_Stat("PREF_HIT_DEMAND_IFETCH", "stream.stat.out", PREF_HIT_DEMAND_IFETCH, procStat);
	m_PREF_HIT_DEMAND_IFETCH = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_IFETCH", "stream.stat.out", PREF_HIT_DEMAND_IFETCH, PREF_HIT_DEMAND_IFETCH);
	m_PREF_HIT_DEMAND_DFETCH = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_DFETCH", "stream.stat.out", PREF_HIT_DEMAND_DFETCH, PREF_HIT_DEMAND_IFETCH);
	m_PREF_HIT_DEMAND_DSTORE = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_DSTORE", "stream.stat.out", PREF_HIT_DEMAND_DSTORE, PREF_HIT_DEMAND_IFETCH);
	m_PREF_HIT_DEMAND_IPREF = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_IPREF", "stream.stat.out", PREF_HIT_DEMAND_IPREF, PREF_HIT_DEMAND_IFETCH);
	m_PREF_HIT_DEMAND_DPRF = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_DPRF", "stream.stat.out", PREF_HIT_DEMAND_DPRF, PREF_HIT_DEMAND_IFETCH);
	m_PREF_HIT_DEMAND_WB = (COUNT_Stat*) new DISTMember_Stat("PREF_HIT_DEMAND_WB", "stream.stat.out", PREF_HIT_DEMAND_WB, PREF_HIT_DEMAND_IFETCH);
	m_DIST_PREF_L2_FILL = new DIST_Stat("PREF_L2_FILL", "stream.stat.out", PREF_L2_FILL, procStat);
	m_PREF_L2_FILL = (COUNT_Stat*) new DISTMember_Stat("PREF_L2_FILL", "stream.stat.out", PREF_L2_FILL, PREF_L2_FILL);
	m_DEMAND_L2_FILL = (COUNT_Stat*) new DISTMember_Stat("DEMAND_L2_FILL", "stream.stat.out", DEMAND_L2_FILL, PREF_L2_FILL);
	m_PREF_REQ_QUE_FULL = new COUNT_Stat("PREF_REQ_QUE_FULL", "stream.stat.out", PREF_REQ_QUE_FULL);
	m_STREAM_REQ_QUEUE_HIT_BY_DEMAND = new COUNT_Stat("STREAM_REQ_QUEUE_HIT_BY_DEMAND", "stream.stat.out", STREAM_REQ_QUEUE_HIT_BY_DEMAND);
	m_L2HIT_STREAM_PREF_REQ_QUE_FULL = new COUNT_Stat("L2HIT_STREAM_PREF_REQ_QUE_FULL", "stream.stat.out", L2HIT_STREAM_PREF_REQ_QUE_FULL);
	m_DIST_L2HIT_HIT_TRAIN_STREAM = new DIST_Stat("L2HIT_HIT_TRAIN_STREAM", "stream.stat.out", L2HIT_HIT_TRAIN_STREAM, procStat);
	m_L2HIT_HIT_TRAIN_STREAM = (COUNT_Stat*) new DISTMember_Stat("L2HIT_HIT_TRAIN_STREAM", "stream.stat.out", L2HIT_HIT_TRAIN_STREAM, L2HIT_HIT_TRAIN_STREAM);
	m_L2HIT_MISS_TRAIN_STREAM = (COUNT_Stat*) new DISTMember_Stat("L2HIT_MISS_TRAIN_STREAM", "stream.stat.out", L2HIT_MISS_TRAIN_STREAM, L2HIT_HIT_TRAIN_STREAM);
	m_L2HIT_STREAM_TRAIN_CREATE = new COUNT_Stat("L2HIT_STREAM_TRAIN_CREATE", "stream.stat.out", L2HIT_STREAM_TRAIN_CREATE);
	m_L2HIT_STREAM_BUFFER_REQ = new COUNT_Stat("L2HIT_STREAM_BUFFER_REQ", "stream.stat.out", L2HIT_STREAM_BUFFER_REQ);
	m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT = new DIST_Stat("L2HIT_STREAM_PREF_DCACHE_HIT", "stream.stat.out", L2HIT_STREAM_PREF_DCACHE_HIT, procStat);
	m_L2HIT_STREAM_PREF_DCACHE_HIT = (COUNT_Stat*) new DISTMember_Stat("L2HIT_STREAM_PREF_DCACHE_HIT", "stream.stat.out", L2HIT_STREAM_PREF_DCACHE_HIT, L2HIT_STREAM_PREF_DCACHE_HIT);
	m_L2HIT_STREAM_PREF_DCACHE_INSERT = (COUNT_Stat*) new DISTMember_Stat("L2HIT_STREAM_PREF_DCACHE_INSERT", "stream.stat.out", L2HIT_STREAM_PREF_DCACHE_INSERT, L2HIT_STREAM_PREF_DCACHE_HIT);
	m_L2HIT_STREAM_L2_MISS = (COUNT_Stat*) new DISTMember_Stat("L2HIT_STREAM_L2_MISS", "stream.stat.out", L2HIT_STREAM_L2_MISS, L2HIT_STREAM_PREF_DCACHE_HIT);
	m_L2HIT_STREAM_DCACHE_PORT_FULL = new COUNT_Stat("L2HIT_STREAM_DCACHE_PORT_FULL", "stream.stat.out", L2HIT_STREAM_DCACHE_PORT_FULL);
	m_L2HIT_STREAM_PREF_L2_PORT_FULL = new COUNT_Stat("L2HIT_STREAM_PREF_L2_PORT_FULL", "stream.stat.out", L2HIT_STREAM_PREF_L2_PORT_FULL);
	m_DIST_L2HIT_TRAIN_HIT_DEMAND = new DIST_Stat("L2HIT_TRAIN_HIT_DEMAND", "stream.stat.out", L2HIT_TRAIN_HIT_DEMAND, procStat);
	m_L2HIT_TRAIN_HIT_DEMAND = (COUNT_Stat*) new DISTMember_Stat("L2HIT_TRAIN_HIT_DEMAND", "stream.stat.out", L2HIT_TRAIN_HIT_DEMAND, L2HIT_TRAIN_HIT_DEMAND);
	m_L2HIT_TRAIN_MISS_REQ = (COUNT_Stat*) new DISTMember_Stat("L2HIT_TRAIN_MISS_REQ", "stream.stat.out", L2HIT_TRAIN_MISS_REQ, L2HIT_TRAIN_HIT_DEMAND);
	m_DIST_L2HIT_TRAIN_FILTER_MISS = new DIST_Stat("L2HIT_TRAIN_FILTER_MISS", "stream.stat.out", L2HIT_TRAIN_FILTER_MISS, procStat);
	m_L2HIT_TRAIN_FILTER_MISS = (COUNT_Stat*) new DISTMember_Stat("L2HIT_TRAIN_FILTER_MISS", "stream.stat.out", L2HIT_TRAIN_FILTER_MISS, L2HIT_TRAIN_FILTER_MISS);
	m_L2HIT_TRAIN_FILTER_HIT = (COUNT_Stat*) new DISTMember_Stat("L2HIT_TRAIN_FILTER_HIT", "stream.stat.out", L2HIT_TRAIN_FILTER_HIT, L2HIT_TRAIN_FILTER_MISS);
	m_DIST_L2HIT_PREF_REQ_DCACHE_HIT = new DIST_Stat("L2HIT_PREF_REQ_DCACHE_HIT", "stream.stat.out", L2HIT_PREF_REQ_DCACHE_HIT, procStat);
	m_L2HIT_PREF_REQ_DCACHE_HIT = (COUNT_Stat*) new DISTMember_Stat("L2HIT_PREF_REQ_DCACHE_HIT", "stream.stat.out", L2HIT_PREF_REQ_DCACHE_HIT, L2HIT_PREF_REQ_DCACHE_HIT);
	m_L2HIT_PREF_REQ_DCACHE_MISS = (COUNT_Stat*) new DISTMember_Stat("L2HIT_PREF_REQ_DCACHE_MISS", "stream.stat.out", L2HIT_PREF_REQ_DCACHE_MISS, L2HIT_PREF_REQ_DCACHE_HIT);
	m_DIST_L2HIT_L2SEND_Q_FULL = new DIST_Stat("L2HIT_L2SEND_Q_FULL", "stream.stat.out", L2HIT_L2SEND_Q_FULL, procStat);
	m_L2HIT_L2SEND_Q_FULL = (COUNT_Stat*) new DISTMember_Stat("L2HIT_L2SEND_Q_FULL", "stream.stat.out", L2HIT_L2SEND_Q_FULL, L2HIT_L2SEND_Q_FULL);
	m_L2HIT_L2SEND_Q_ENTER = (COUNT_Stat*) new DISTMember_Stat("L2HIT_L2SEND_Q_ENTER", "stream.stat.out", L2HIT_L2SEND_Q_ENTER, L2HIT_L2SEND_Q_FULL);
	m_L2HIT_MEM_REQ = new COUNT_Stat("L2HIT_MEM_REQ", "stream.stat.out", L2HIT_MEM_REQ);
	m_REMOVE_REDUNDANT_STREAM_STAT = new COUNT_Stat("REMOVE_REDUNDANT_STREAM_STAT", "stream.stat.out", REMOVE_REDUNDANT_STREAM_STAT);
	m_REPLACE_OLD_STREAM = new COUNT_Stat("REPLACE_OLD_STREAM", "stream.stat.out", REPLACE_OLD_STREAM);
	m_REQ_SEND_QUEUE_STALL = new COUNT_Stat("REQ_SEND_QUEUE_STALL", "stream.stat.out", REQ_SEND_QUEUE_STALL);
	m_DIST_STREAM_LENGTH_0 = new DIST_Stat("STREAM_LENGTH_0", "stream.stat.out", STREAM_LENGTH_0, procStat);
	m_STREAM_LENGTH_0 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_0", "stream.stat.out", STREAM_LENGTH_0, STREAM_LENGTH_0);
	m_STREAM_LENGTH_10 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_10", "stream.stat.out", STREAM_LENGTH_10, STREAM_LENGTH_0);
	m_STREAM_LENGTH_20 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_20", "stream.stat.out", STREAM_LENGTH_20, STREAM_LENGTH_0);
	m_STREAM_LENGTH_30 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_30", "stream.stat.out", STREAM_LENGTH_30, STREAM_LENGTH_0);
	m_STREAM_LENGTH_40 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_40", "stream.stat.out", STREAM_LENGTH_40, STREAM_LENGTH_0);
	m_STREAM_LENGTH_50 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_50", "stream.stat.out", STREAM_LENGTH_50, STREAM_LENGTH_0);
	m_STREAM_LENGTH_60 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_60", "stream.stat.out", STREAM_LENGTH_60, STREAM_LENGTH_0);
	m_STREAM_LENGTH_70 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_70", "stream.stat.out", STREAM_LENGTH_70, STREAM_LENGTH_0);
	m_STREAM_LENGTH_80 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_80", "stream.stat.out", STREAM_LENGTH_80, STREAM_LENGTH_0);
	m_STREAM_LENGTH_90 = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_90", "stream.stat.out", STREAM_LENGTH_90, STREAM_LENGTH_0);
	m_STREAM_LENGTH_100_P = (COUNT_Stat*) new DISTMember_Stat("STREAM_LENGTH_100_P", "stream.stat.out", STREAM_LENGTH_100_P, STREAM_LENGTH_0);
	m_STREAM_ENTER_RA = new COUNT_Stat("STREAM_ENTER_RA", "stream.stat.out", STREAM_ENTER_RA);
	
	// ============= ../def/trace.stat.def =============
	m_TRACE_READ_COUNT = new COUNT_Stat("TRACE_READ_COUNT", "trace.stat.out", TRACE_READ_COUNT);
}

all_stats_c::~all_stats_c() {
	delete m_ALLOC_COUNT;
	delete m_DIST_BP_ON_PATH_CORRECT;
	delete m_BP_ON_PATH_CORRECT;
	delete m_BP_ON_PATH_MISPREDICT;
	delete m_BP_ON_PATH_MISFETCH;
	delete m_DIST_BP_OFF_PATH_CORRECT;
	delete m_BP_OFF_PATH_CORRECT;
	delete m_BP_OFF_PATH_MISPREDICT;
	delete m_BP_OFF_PATH_MISFETCH;
	delete m_BP_MISPRED_STALL;
	delete m_BP_RESOLVED;
	delete m_BP_REDIRECT_RESOLVED;
	delete m_PERFECT_TARGET_PRED;
	delete m_DIST_SCHED_FAILED_REASON_SUCCESS;
	delete m_SCHED_FAILED_REASON_SUCCESS;
	delete m_SCHED_FAILED_OPERANDS_NOT_READY;
	delete m_SCHED_FAILED_NO_PORTS;
	delete m_NUM_SAMPLES;
	delete m_NUM_ACTIVE_BLOCKS;
	delete m_NUM_ACTIVE_THREADS;
	delete m_NUM_SCHED_IDLE_CYCLE;
	delete m_NUM_NO_SCHED_CYCLE;
	delete m_ROI_NUM_NO_SCHED_CYCLE;
	delete m_DISPATCHED_INST;
	delete m_DISPATCH_WAIT;
	delete m_CORE_DISPATCHED_INST;
	delete m_CORE_DISPATCH_WAIT;
	delete m_CORE_CYCLES;
	delete m_ROI_CORE_CYCLES;
	delete m_CORE_SCHED_THREADS;
	delete m_NUM_NO_FETCH_CYCLES;
	delete m_CORE_NUM_NO_FETCH_CYCLES;
	delete m_CORE_NUM_NO_FETCH_CYCLES_WITH_READY_THREADS;
	delete m_CORE_NUM_FETCH_CYCLES;
	delete m_CORE_FETCH_DELTA;
	delete m_CORE_NUM_RETIRE_CYCLES;
	delete m_CORE_RETIRE_DELTA;
	delete m_AVG_CORE_IDLE_CYCLE;
	delete m_DRAM_PRECHARGE;
	delete m_DRAM_ACTIVATE;
	delete m_DRAM_COLUMN;
	delete m_DRAM_AVG_LATENCY_BASE;
	delete m_DRAM_AVG_LATENCY;
	delete m_BANDWIDTH_TOT;
	delete m_DRAM_CHANNEL0_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL1_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL2_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL3_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL4_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL5_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL6_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL7_BANDWIDTH_SATURATED;
	delete m_DRAM_CHANNEL0_DBUS_IDLE;
	delete m_DRAM_CHANNEL1_DBUS_IDLE;
	delete m_DRAM_CHANNEL2_DBUS_IDLE;
	delete m_DRAM_CHANNEL3_DBUS_IDLE;
	delete m_DRAM_CHANNEL4_DBUS_IDLE;
	delete m_DRAM_CHANNEL5_DBUS_IDLE;
	delete m_DRAM_CHANNEL6_DBUS_IDLE;
	delete m_DRAM_CHANNEL7_DBUS_IDLE;
	delete m_INST_COUNT_TOT;
	delete m_INST_COUNT;
	delete m_CYC_COUNT_TOT;
	delete m_CYC_COUNT;
	delete m_EXE_TIME;
	delete m_NUM_REPEAT;
	delete m_CYC_COUNT_X86;
	delete m_CYC_COUNT_PTX;
	delete m_AVG_BLOCK_EXE_CYCLE;
	delete m_AVG_BLOCK_EXE_CYCLE_BASE;
	delete m_PROGRESS_ERROR;
	delete m_FILE_OPEN_ERROR;
	delete m_NUM_THREAD;
	delete m_APPL_CYC_COUNT_BASE0;
	delete m_APPL_CYC_COUNT_BASE1;
	delete m_APPL_CYC_COUNT_BASE2;
	delete m_APPL_CYC_COUNT_BASE3;
	delete m_APPL_CYC_COUNT_BASE4;
	delete m_APPL_CYC_COUNT0;
	delete m_APPL_CYC_COUNT1;
	delete m_APPL_CYC_COUNT2;
	delete m_APPL_CYC_COUNT3;
	delete m_APPL_CYC_COUNT4;
	delete m_CPI_DELTA_BASE0;
	delete m_CPI_DELTA_BASE1;
	delete m_CPI_DELTA_BASE2;
	delete m_CPI_DELTA_BASE3;
	delete m_CPI_DELTA_BASE4;
	delete m_CPI_DELTA0;
	delete m_CPI_DELTA1;
	delete m_CPI_DELTA2;
	delete m_CPI_DELTA3;
	delete m_CPI_DELTA4;
	delete m_CYCLE_CPU;
	delete m_CYCLE_GPU;
	delete m_DIST_OP_CAT_INVALID;
	delete m_OP_CAT_INVALID;
	delete m_OP_CAT_3DNOW;
	delete m_OP_CAT_AES;
	delete m_OP_CAT_BASE;
	delete m_OP_CAT_BINARY;
	delete m_OP_CAT_BITBYTE;
	delete m_OP_CAT_CALL;
	delete m_OP_CAT_CMOV;
	delete m_OP_CAT_COND_BR;
	delete m_OP_CAT_DATAXFER;
	delete m_OP_CAT_DECIMAL;
	delete m_OP_CAT_FCMOV;
	delete m_OP_CAT_FLAGOP;
	delete m_OP_CAT_INTERRUPT;
	delete m_OP_CAT_IO;
	delete m_OP_CAT_IOSTRINGOP;
	delete m_OP_CAT_LOGICAL;
	delete m_OP_CAT_MISC;
	delete m_OP_CAT_MMX;
	delete m_OP_CAT_NOP;
	delete m_OP_CAT_PCLMULQDQ;
	delete m_OP_CAT_POP;
	delete m_OP_CAT_PREFETCH;
	delete m_OP_CAT_PUSH;
	delete m_OP_CAT_RET;
	delete m_OP_CAT_ROTATE;
	delete m_OP_CAT_SEGOP;
	delete m_OP_CAT_SEMAPHORE;
	delete m_OP_CAT_SHIFT;
	delete m_OP_CAT_SSE;
	delete m_OP_CAT_SSE5;
	delete m_OP_CAT_STRINGOP;
	delete m_OP_CAT_SYSCALL;
	delete m_OP_CAT_SYSRET;
	delete m_OP_CAT_SYSTEM;
	delete m_OP_CAT_UNCOND_BR;
	delete m_OP_CAT_VTX;
	delete m_OP_CAT_WIDENOP;
	delete m_OP_CAT_X87_ALU;
	delete m_OP_CAT_XSAVE;
	delete m_OP_CAT_TR_MUL;
	delete m_OP_CAT_TR_DIV;
	delete m_OP_CAT_TR_FMUL;
	delete m_OP_CAT_TR_FDIV;
	delete m_OP_CAT_TR_NOP;
	delete m_OP_CAT_PREFETCH_NTA;
	delete m_OP_CAT_PREFETCH_T0;
	delete m_OP_CAT_PREFETCH_T1;
	delete m_OP_CAT_PREFETCH_T2;
	delete m_OP_CAT_TR_MEM_LD_LM;
	delete m_OP_CAT_TR_MEM_LD_SM;
	delete m_OP_CAT_TR_MEM_LD_GM;
	delete m_OP_CAT_TR_MEM_ST_LM;
	delete m_OP_CAT_TR_MEM_ST_SM;
	delete m_OP_CAT_TR_MEM_ST_GM;
	delete m_OP_CAT_TR_DATA_XFER_LM;
	delete m_OP_CAT_TR_DATA_XFER_SM;
	delete m_OP_CAT_TR_DATA_XFER_GM;
	delete m_OP_CAT_TR_LAST;
	delete m_FP_OPS_TOT;
	delete m_FP_OPS;
	delete m_AVG_MEMORY_LATENCY_BASE;
	delete m_AVG_MEMORY_LATENCY;
	delete m_MSHR_FULL;
	delete m_TOTAL_MEMORY;
	delete m_TOTAL_MEMORY_MERGE;
	delete m_TOTAL_WB;
	delete m_L1_WB;
	delete m_L2_WB;
	delete m_L3_WB;
	delete m_TOTAL_DRAM;
	delete m_TOTAL_DRAM_MERGE;
	delete m_L1_HIT_CPU;
	delete m_L1_HIT_GPU;
	delete m_L1_MISS_CPU;
	delete m_L1_MISS_GPU;
	delete m_L2_HIT_CPU;
	delete m_L2_HIT_GPU;
	delete m_L2_MISS_CPU;
	delete m_L2_MISS_GPU;
	delete m_L3_HIT_CPU;
	delete m_L3_HIT_GPU;
	delete m_L3_MISS_CPU;
	delete m_L3_MISS_GPU;
	delete m_L3_HIT_PROMOTION_CPU;
	delete m_L3_HIT_PROMOTION_GPU;
	delete m_DIST_ICACHE_HIT;
	delete m_ICACHE_HIT;
	delete m_ICACHE_MISS;
	delete m_FETCH_THREAD_SKIP_LD_WAIT;
	delete m_FETCH_THREAD_SKIP_BR_WAIT;
	delete m_FETCH_THREAD_SKIP_SCHED_WAIT;
	delete m_DIST_COAL_INST;
	delete m_COAL_INST;
	delete m_UNCOAL_INST;
	delete m_DIST_COAL_INST_SINGLE_TRANS;
	delete m_COAL_INST_SINGLE_TRANS;
	delete m_COAL_INST_MUL_TRANS;
	delete m_UNCOAL_INST_MUL_TRANS;
	delete m_DIST_SM_COAL_INST;
	delete m_SM_COAL_INST;
	delete m_CM_COAL_INST;
	delete m_TM_COAL_INST;
	delete m_DM_COAL_INST;
	delete m_DIST_SM_UNCOAL_INST;
	delete m_SM_UNCOAL_INST;
	delete m_CM_UNCOAL_INST;
	delete m_TM_UNCOAL_INST;
	delete m_DM_UNCOAL_INST;
	delete m_DIST_SM_COAL_INST_SINGLE_TRANS;
	delete m_SM_COAL_INST_SINGLE_TRANS;
	delete m_CM_COAL_INST_SINGLE_TRANS;
	delete m_TM_COAL_INST_SINGLE_TRANS;
	delete m_DM_COAL_INST_SINGLE_TRANS;
	delete m_DIST_SM_COAL_INST_MUL_TRANS;
	delete m_SM_COAL_INST_MUL_TRANS;
	delete m_CM_COAL_INST_MUL_TRANS;
	delete m_TM_COAL_INST_MUL_TRANS;
	delete m_DM_COAL_INST_MUL_TRANS;
	delete m_NUM_MUL_TRANS_CM_TM_DM_INST;
	delete m_NUM_MUL_TRANS_CM_TM_DM;
	delete m_CONST_CACHE_HIT;
	delete m_CONST_CACHE_MISS;
	delete m_CONST_CACHE_MISS_NO_EXECUTE;
	delete m_CONST_CACHE_ACCESS;
	delete m_TEXTURE_CACHE_HIT;
	delete m_TEXTURE_CACHE_MISS;
	delete m_TEXTURE_CACHE_NO_EXECUTE;
	delete m_TEXTURE_CACHE_ACCESS;
	delete m_SHARED_MEM_INST;
	delete m_SHARED_MEM_ACCESS;
	delete m_DIST_LD_NO_FORWARD;
	delete m_LD_NO_FORWARD;
	delete m_FORWARDED_LD;
	delete m_MEM_STALL_CYCLE;
	delete m_CACHE_BANK_BUSY;
	delete m_ICACHE_MISS_TOTAL;
	delete m_ICACHE_FILL;
	delete m_TOTAL_CAGE_PERIOD;
	delete m_TOTAL_CAGE_APPL0;
	delete m_TOTAL_CAGE_APPL1;
	delete m_TOTAL_CAGE_APPL2;
	delete m_TOTAL_CAGE_APPL3;
	delete m_TOTAL_CAGE_APPL4;
	delete m_ABIP_AVG_RATIO_BASE;
	delete m_ABIP_AVG_RATIO;
	delete m_NUM_STACK_ACCESS;
	delete m_NUM_HEAP_ACCESS;
	delete m_TOTAL_PACKET_CPU;
	delete m_TOTAL_PACKET_GPU;
	delete m_NOC_AVG_LATENCY_BASE;
	delete m_NOC_AVG_LATENCY_BASE_CPU;
	delete m_NOC_AVG_LATENCY_BASE_GPU;
	delete m_NOC_AVG_LATENCY;
	delete m_NOC_AVG_LATENCY_CPU;
	delete m_NOC_AVG_LATENCY_GPU;
	delete m_NOC_AVG_ACTIVE_PACKET_BASE;
	delete m_NOC_AVG_ACTIVE_PACKET_BASE_CPU;
	delete m_NOC_AVG_ACTIVE_PACKET_BASE_GPU;
	delete m_NOC_AVG_ACTIVE_PACKET;
	delete m_NOC_AVG_ACTIVE_PACKET_CPU;
	delete m_NOC_AVG_ACTIVE_PACKET_GPU;
	delete m_NOC_IDLE_CHANNEL;
	delete m_NOC_IDLE_CHANNEL_CPU;
	delete m_NOC_IDLE_CHANNEL_GPU;
	delete m_NOC_IDLE_CHANNEL_L3;
	delete m_NOC_IDLE_CHANNEL_MC;
	delete m_NOC_AVG_WAIT_IN_ROUTER_BASE;
	delete m_NOC_AVG_WAIT_IN_ROUTER_BASE_CPU;
	delete m_NOC_AVG_WAIT_IN_ROUTER_BASE_GPU;
	delete m_NOC_AVG_WAIT_IN_ROUTER_BASE_L3;
	delete m_NOC_AVG_WAIT_IN_ROUTER_BASE_MC;
	delete m_NOC_AVG_WAIT_IN_ROUTER;
	delete m_NOC_AVG_WAIT_IN_ROUTER_CPU;
	delete m_NOC_AVG_WAIT_IN_ROUTER_GPU;
	delete m_NOC_AVG_WAIT_IN_ROUTER_L3;
	delete m_NOC_AVG_WAIT_IN_ROUTER_MC;
	delete m_NOC_LINK_ACTIVE;
	delete m_POWER_BLOCK_STATES_R;
	delete m_POWER_BLOCK_STATES_W;
	delete m_POWER_FETCH_QUEUE_R;
	delete m_POWER_FETCH_QUEUE_W;
	delete m_POWER_INST_QUEUE_R;
	delete m_POWER_INST_QUEUE_W;
	delete m_POWER_BR_PRED_R;
	delete m_POWER_BR_PRED_W;
	delete m_POWER_RAS_R;
	delete m_POWER_RAS_W;
	delete m_POWER_ICACHE_R;
	delete m_POWER_ICACHE_W;
	delete m_POWER_ICACHE_R_TAG;
	delete m_POWER_ICACHE_MISS_BUF_R;
	delete m_POWER_ICACHE_MISS_BUF_W;
	delete m_POWER_ICACHE_MISS_BUF_R_TAG;
	delete m_POWER_ICACHE_MISS_BUF_W_TAG;
	delete m_POWER_ICACHE_TOT_ACC;
	delete m_POWER_ICACHE_CONF;
	delete m_POWER_INST_DECODER_R;
	delete m_POWER_INST_DECODER_W;
	delete m_POWER_MICRO_OP_SEQ_R;
	delete m_POWER_MICRO_OP_SEQ_W;
	delete m_POWER_OPERAND_DECODER_R;
	delete m_POWER_OPERAND_DECODER_W;
	delete m_POWER_UOP_QUEUE_R;
	delete m_POWER_UOP_QUEUE_W;
	delete m_POWER_REG_RENAMING_TABLE_R;
	delete m_POWER_REG_RENAMING_TABLE_W;
	delete m_POWER_DEP_CHECK_LOGIC_R;
	delete m_POWER_FREELIST_R;
	delete m_POWER_FREELIST_W;
	delete m_POWER_RESERVATION_STATION_R;
	delete m_POWER_RESERVATION_STATION_W;
	delete m_POWER_RESERVATION_STATION_R_TAG;
	delete m_POWER_RESERVATION_STATION_W_TAG;
	delete m_POWER_INST_ISSUE_SEL_LOGIC_R;
	delete m_POWER_INST_ISSUE_SEL_LOGIC_W;
	delete m_POWER_PAYLOAD_RAM_R;
	delete m_POWER_PAYLOAD_RAM_W;
	delete m_POWER_EX_ALU_R;
	delete m_POWER_EX_FPU_R;
	delete m_POWER_EX_MUL_R;
	delete m_POWER_EX_SFU_R;
	delete m_POWER_REORDER_BUF_R;
	delete m_POWER_REORDER_BUF_W;
	delete m_POWER_INST_COMMIT_SEL_LOGIC_R;
	delete m_POWER_INST_COMMIT_SEL_LOGIC_W;
	delete m_POWER_FP_RENAME_R;
	delete m_POWER_FP_RENAME_W;
	delete m_POWER_LOAD_QUEUE_R;
	delete m_POWER_LOAD_QUEUE_W;
	delete m_POWER_LOAD_QUEUE_R_TAG;
	delete m_POWER_LOAD_QUEUE_W_TAG;
	delete m_POWER_STORE_QUEUE_R;
	delete m_POWER_STORE_QUEUE_W;
	delete m_POWER_STORE_QUEUE_R_TAG;
	delete m_POWER_STORE_QUEUE_W_TAG;
	delete m_POWER_DATA_TLB_R;
	delete m_POWER_DATA_TLB_W;
	delete m_POWER_DATA_TLB_R_TAG;
	delete m_POWER_DATA_TLB_W_TAG;
	delete m_POWER_INT_REGFILE_R;
	delete m_POWER_INT_REGFILE_W;
	delete m_POWER_FP_REGFILE_R;
	delete m_POWER_FP_REGFILE_W;
	delete m_POWER_GP_REGISTER_R;
	delete m_POWER_GP_REGISTER_W;
	delete m_POWER_FP_REGISTER_R;
	delete m_POWER_FP_REGISTER_W;
	delete m_POWER_SEGMENT_REGISTER_R;
	delete m_POWER_SEGMENT_REGISTER_W;
	delete m_POWER_CONTROL_REGISTER_R;
	delete m_POWER_CONTROL_REGISTER_W;
	delete m_POWER_FLAG_REGISTER_R;
	delete m_POWER_FLAG_REGISTER_W;
	delete m_POWER_EXEC_BYPASS;
	delete m_POWER_LOAD_BYPASS;
	delete m_POWER_PIPELINE;
	delete m_POWER_DCACHE_MISS_BUF_R;
	delete m_POWER_DCACHE_MISS_BUF_R_TAG;
	delete m_POWER_DCACHE_MISS_BUF_W;
	delete m_POWER_DCACHE_MISS_BUF_W_TAG;
	delete m_POWER_DCACHE_LINEFILL_BUF_R;
	delete m_POWER_L2CACHE_LINEFILL_BUF_R;
	delete m_POWER_L3CACHE_LINEFILL_BUF_R;
	delete m_POWER_DCACHE_LINEFILL_BUF_W;
	delete m_POWER_L2CACHE_LINEFILL_BUF_W;
	delete m_POWER_L3CACHE_LINEFILL_BUF_W;
	delete m_POWER_DCACHE_LINEFILL_BUF_R_TAG;
	delete m_POWER_L2CACHE_LINEFILL_BUF_R_TAG;
	delete m_POWER_L3CACHE_LINEFILL_BUF_R_TAG;
	delete m_POWER_DCACHE_LINEFILL_BUF_W_TAG;
	delete m_POWER_DCACHE_WB_BUF_R;
	delete m_POWER_L2CACHE_WB_BUF_R;
	delete m_POWER_L3CACHE_WB_BUF_R;
	delete m_POWER_DCACHE_WB_BUF_W;
	delete m_POWER_L2CACHE_WB_BUF_W;
	delete m_POWER_L3CACHE_WB_BUF_W;
	delete m_POWER_DCACHE_WB_BUF_R_TAG;
	delete m_POWER_L2CACHE_WB_BUF_R_TAG;
	delete m_POWER_L3CACHE_WB_BUF_R_TAG;
	delete m_POWER_DCACHE_WB_BUF_W_TAG;
	delete m_POWER_DCACHE_R;
	delete m_POWER_L2CACHE_R;
	delete m_POWER_L3CACHE_R;
	delete m_POWER_DCACHE_W;
	delete m_POWER_L2CACHE_W;
	delete m_POWER_L3CACHE_W;
	delete m_POWER_DCACHE_R_TAG;
	delete m_POWER_L2CACHE_R_TAG;
	delete m_POWER_L3CACHE_R_TAG;
	delete m_POWER_MC_R;
	delete m_POWER_MC_W;
	delete m_POWER_CONST_CACHE_R;
	delete m_POWER_CONST_CACHE_W;
	delete m_POWER_CONST_CACHE_R_TAG;
	delete m_POWER_CONST_CACHE_W_TAG;
	delete m_POWER_TEXTURE_CACHE_R;
	delete m_POWER_TEXTURE_CACHE_W;
	delete m_POWER_TEXTURE_CACHE_R_TAG;
	delete m_POWER_TEXTURE_CACHE_W_TAG;
	delete m_POWER_SHARED_MEM_R;
	delete m_POWER_SHARED_MEM_W;
	delete m_POWER_SHARED_MEM_R_TAG;
	delete m_POWER_SHARED_MEM_W_TAG;
	delete m_DIST_PREF_ACC_1;
	delete m_PREF_ACC_1;
	delete m_PREF_ACC_2;
	delete m_PREF_ACC_3;
	delete m_PREF_ACC_4;
	delete m_PREF_ACC_5;
	delete m_PREF_ACC_6;
	delete m_PREF_ACC_7;
	delete m_PREF_ACC_8;
	delete m_PREF_ACC_9;
	delete m_PREF_ACC_10;
	delete m_DIST_PREF_TIMELY_1;
	delete m_PREF_TIMELY_1;
	delete m_PREF_TIMELY_2;
	delete m_PREF_TIMELY_3;
	delete m_PREF_TIMELY_4;
	delete m_PREF_TIMELY_5;
	delete m_PREF_TIMELY_6;
	delete m_PREF_TIMELY_7;
	delete m_PREF_TIMELY_8;
	delete m_PREF_TIMELY_9;
	delete m_PREF_TIMELY_10;
	delete m_DIST_PREF_POL_1;
	delete m_PREF_POL_1;
	delete m_PREF_POL_2;
	delete m_PREF_POL_3;
	delete m_PREF_POL_4;
	delete m_PREF_POL_5;
	delete m_PREF_POL_6;
	delete m_PREF_POL_7;
	delete m_PREF_POL_8;
	delete m_PREF_POL_9;
	delete m_PREF_POL_10;
	delete m_DIST_PREF_ACC1_HT_HP;
	delete m_PREF_ACC1_HT_HP;
	delete m_PREF_ACC1_HT_LP;
	delete m_PREF_ACC1_LT_HP;
	delete m_PREF_ACC1_LT_LP;
	delete m_PREF_ACC2_HT_HP;
	delete m_PREF_ACC2_HT_LP;
	delete m_PREF_ACC2_LT_HP;
	delete m_PREF_ACC2_LT_LP;
	delete m_PREF_ACC3_HT_HP;
	delete m_PREF_ACC3_HT_LP;
	delete m_PREF_ACC3_LT_HP;
	delete m_PREF_ACC3_LT_LP;
	delete m_PREF_ACC4_HT_HP;
	delete m_PREF_ACC4_HT_LP;
	delete m_PREF_ACC4_LT_HP;
	delete m_PREF_ACC4_LT_LP;
	delete m_DIST_PREF_DISTANCE_1;
	delete m_PREF_DISTANCE_1;
	delete m_PREF_DISTANCE_2;
	delete m_PREF_DISTANCE_3;
	delete m_PREF_DISTANCE_4;
	delete m_PREF_DISTANCE_5;
	delete m_PREF_PFPOL;
	delete m_PREF_DL0REQ_QUEUE_HIT_BY_DEMAND;
	delete m_PREF_UL2REQ_QUEUE_HIT_BY_DEMAND;
	delete m_PREF_DL0REQ_QUEUE_FULL;
	delete m_PREF_UL2REQ_QUEUE_FULL;
	delete m_PREF_UL2REQ_SEND_QUEUE_STALL;
	delete m_PREF_UL2REQ_QUEUE_MATCHED_REQ;
	delete m_PREF_DL0REQ_QUEUE_MATCHED_REQ;
	delete m_PREF_UL2REQ_QUEUE_SENTREQ;
	delete m_PREF_UNUSED_EVICT;
	delete m_PREF_REGION_SENT;
	delete m_PREF_REGION_USEFUL;
	delete m_PREF_REGION_EVICT;
	delete m_PREF_PHASE_OVERWRITE_PAGE;
	delete m_PREF_UPDATE_COUNT;
	delete m_DIST_PREF_HYBRID_SEL_0;
	delete m_PREF_HYBRID_SEL_0;
	delete m_PREF_HYBRID_SEL_1;
	delete m_PREF_HYBRID_SEL_2;
	delete m_PREF_HYBRID_SEL_3;
	delete m_PREF_HYBRID_SEL_4;
	delete m_PREF_HYBRID_SEL_5;
	delete m_PREF_HYBRID_SEL_6;
	delete m_DCACHE_PREF_HIT;
	delete m_DIST_IFETCH_WB_FIRST_SCHEDULE;
	delete m_IFETCH_WB_FIRST_SCHEDULE;
	delete m_PREFETCH_LAST_SCHEDULE;
	delete m_DEMAND_PASS_PREF_SCHEDULE;
	delete m_DEMAND_PASS_LOW_OP_SCHEDULE;
	delete m_DEMAND_LAST_SCHEDULE;
	delete m_STREAM_BUFFER_REQ;
	delete m_DIST_PREF_SEND_TO_MEM_REQ;
	delete m_PREF_SEND_TO_MEM_REQ;
	delete m_PREF_SEND_TO_MEM_REQ_FAIL;
	delete m_DIST_HIT_TRAIN_STREAM;
	delete m_HIT_TRAIN_STREAM;
	delete m_MISS_TRAIN_STREAM;
	delete m_STREAM_TRAIN_CREATE;
	delete m_DIST_MEM_REQ_MISS_HWP_PREF_Q;
	delete m_MEM_REQ_MISS_HWP_PREF_Q;
	delete m_MEM_REQ_MISS_SW_PREF_Q;
	delete m_MEM_REQ_MISS_IFETCH_Q;
	delete m_MEM_REQ_MISS_DFETCH_Q;
	delete m_MEM_REQ_MISS_DSTORE_Q;
	delete m_MEM_REQ_MISS_DPRF_Q;
	delete m_MEM_REQ_MISS_WB_Q;
	delete m_DIST_PREF_HIT_BY_DEMAND_IFETCH;
	delete m_PREF_HIT_BY_DEMAND_IFETCH;
	delete m_PREF_HIT_BY_DEMAND_DFETCH;
	delete m_PREF_HIT_BY_DEMAND_DSTORE;
	delete m_PREF_HIT_BY_DEMAND_IPREF;
	delete m_PREF_HIT_BY_DEMAND_DPRF;
	delete m_PREF_HIT_BY_DEMAND_WB;
	delete m_PREF_HIT_BY_PREF;
	delete m_DIST_PREF_HIT_DEMAND_IFETCH;
	delete m_PREF_HIT_DEMAND_IFETCH;
	delete m_PREF_HIT_DEMAND_DFETCH;
	delete m_PREF_HIT_DEMAND_DSTORE;
	delete m_PREF_HIT_DEMAND_IPREF;
	delete m_PREF_HIT_DEMAND_DPRF;
	delete m_PREF_HIT_DEMAND_WB;
	delete m_DIST_PREF_L2_FILL;
	delete m_PREF_L2_FILL;
	delete m_DEMAND_L2_FILL;
	delete m_PREF_REQ_QUE_FULL;
	delete m_STREAM_REQ_QUEUE_HIT_BY_DEMAND;
	delete m_L2HIT_STREAM_PREF_REQ_QUE_FULL;
	delete m_DIST_L2HIT_HIT_TRAIN_STREAM;
	delete m_L2HIT_HIT_TRAIN_STREAM;
	delete m_L2HIT_MISS_TRAIN_STREAM;
	delete m_L2HIT_STREAM_TRAIN_CREATE;
	delete m_L2HIT_STREAM_BUFFER_REQ;
	delete m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT;
	delete m_L2HIT_STREAM_PREF_DCACHE_HIT;
	delete m_L2HIT_STREAM_PREF_DCACHE_INSERT;
	delete m_L2HIT_STREAM_L2_MISS;
	delete m_L2HIT_STREAM_DCACHE_PORT_FULL;
	delete m_L2HIT_STREAM_PREF_L2_PORT_FULL;
	delete m_DIST_L2HIT_TRAIN_HIT_DEMAND;
	delete m_L2HIT_TRAIN_HIT_DEMAND;
	delete m_L2HIT_TRAIN_MISS_REQ;
	delete m_DIST_L2HIT_TRAIN_FILTER_MISS;
	delete m_L2HIT_TRAIN_FILTER_MISS;
	delete m_L2HIT_TRAIN_FILTER_HIT;
	delete m_DIST_L2HIT_PREF_REQ_DCACHE_HIT;
	delete m_L2HIT_PREF_REQ_DCACHE_HIT;
	delete m_L2HIT_PREF_REQ_DCACHE_MISS;
	delete m_DIST_L2HIT_L2SEND_Q_FULL;
	delete m_L2HIT_L2SEND_Q_FULL;
	delete m_L2HIT_L2SEND_Q_ENTER;
	delete m_L2HIT_MEM_REQ;
	delete m_REMOVE_REDUNDANT_STREAM_STAT;
	delete m_REPLACE_OLD_STREAM;
	delete m_REQ_SEND_QUEUE_STALL;
	delete m_DIST_STREAM_LENGTH_0;
	delete m_STREAM_LENGTH_0;
	delete m_STREAM_LENGTH_10;
	delete m_STREAM_LENGTH_20;
	delete m_STREAM_LENGTH_30;
	delete m_STREAM_LENGTH_40;
	delete m_STREAM_LENGTH_50;
	delete m_STREAM_LENGTH_60;
	delete m_STREAM_LENGTH_70;
	delete m_STREAM_LENGTH_80;
	delete m_STREAM_LENGTH_90;
	delete m_STREAM_LENGTH_100_P;
	delete m_STREAM_ENTER_RA;
	delete m_TRACE_READ_COUNT;
}

void all_stats_c::initialize(ProcessorStatistics* m_ProcessorStats, CoreStatistics* m_coreStatsTemplate) {
	m_ProcessorStats->globalStats()->addStatistic(m_ALLOC_COUNT);
	m_ProcessorStats->globalStats()->addStatistic(m_DISPATCHED_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_DISPATCH_WAIT);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_NO_FETCH_CYCLES);
	m_ProcessorStats->globalStats()->addStatistic(m_AVG_CORE_IDLE_CYCLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_PRECHARGE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_ACTIVATE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_COLUMN);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_AVG_LATENCY_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_AVG_LATENCY);
	m_ProcessorStats->globalStats()->addStatistic(m_BANDWIDTH_TOT);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL0_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL1_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL2_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL3_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL4_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL5_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL6_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL7_BANDWIDTH_SATURATED);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL0_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL1_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL2_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL3_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL4_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL5_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL6_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_DRAM_CHANNEL7_DBUS_IDLE);
	m_ProcessorStats->globalStats()->addStatistic(m_INST_COUNT_TOT);
	m_ProcessorStats->globalStats()->addStatistic(m_CYC_COUNT_TOT);
	m_ProcessorStats->globalStats()->addStatistic(m_EXE_TIME);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_REPEAT);
	m_ProcessorStats->globalStats()->addStatistic(m_CYC_COUNT_X86);
	m_ProcessorStats->globalStats()->addStatistic(m_CYC_COUNT_PTX);
	m_ProcessorStats->globalStats()->addStatistic(m_AVG_BLOCK_EXE_CYCLE);
	m_ProcessorStats->globalStats()->addStatistic(m_AVG_BLOCK_EXE_CYCLE_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_PROGRESS_ERROR);
	m_ProcessorStats->globalStats()->addStatistic(m_FILE_OPEN_ERROR);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_THREAD);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT_BASE0);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT_BASE1);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT_BASE2);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT_BASE3);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT_BASE4);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT0);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT1);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT2);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT3);
	m_ProcessorStats->globalStats()->addStatistic(m_APPL_CYC_COUNT4);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA_BASE0);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA_BASE1);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA_BASE2);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA_BASE3);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA_BASE4);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA0);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA1);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA2);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA3);
	m_ProcessorStats->globalStats()->addStatistic(m_CPI_DELTA4);
	m_ProcessorStats->globalStats()->addStatistic(m_CYCLE_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_CYCLE_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_FP_OPS_TOT);
	m_ProcessorStats->globalStats()->addStatistic(m_AVG_MEMORY_LATENCY_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_AVG_MEMORY_LATENCY);
	m_ProcessorStats->globalStats()->addStatistic(m_MSHR_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_MEMORY);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_MEMORY_MERGE);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_L1_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_L2_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_DRAM);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_DRAM_MERGE);
	m_ProcessorStats->globalStats()->addStatistic(m_L1_HIT_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L1_HIT_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L1_MISS_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L1_MISS_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L2_HIT_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L2_HIT_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L2_MISS_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L2_MISS_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_HIT_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_HIT_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_MISS_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_MISS_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_HIT_PROMOTION_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_L3_HIT_PROMOTION_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_FETCH_THREAD_SKIP_LD_WAIT);
	m_ProcessorStats->globalStats()->addStatistic(m_FETCH_THREAD_SKIP_BR_WAIT);
	m_ProcessorStats->globalStats()->addStatistic(m_FETCH_THREAD_SKIP_SCHED_WAIT);
	m_ProcessorStats->globalStats()->addStatistic(m_COAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_UNCOAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_SM_COAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_CM_COAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_TM_COAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_DM_COAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_SM_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_CM_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_TM_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_DM_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_SM_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_CM_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_TM_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_DM_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_SM_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_CM_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_TM_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_DM_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_MUL_TRANS_CM_TM_DM_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_MUL_TRANS_CM_TM_DM);
	m_ProcessorStats->globalStats()->addStatistic(m_CONST_CACHE_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_CONST_CACHE_MISS);
	m_ProcessorStats->globalStats()->addStatistic(m_CONST_CACHE_MISS_NO_EXECUTE);
	m_ProcessorStats->globalStats()->addStatistic(m_CONST_CACHE_ACCESS);
	m_ProcessorStats->globalStats()->addStatistic(m_TEXTURE_CACHE_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_TEXTURE_CACHE_MISS);
	m_ProcessorStats->globalStats()->addStatistic(m_TEXTURE_CACHE_NO_EXECUTE);
	m_ProcessorStats->globalStats()->addStatistic(m_TEXTURE_CACHE_ACCESS);
	m_ProcessorStats->globalStats()->addStatistic(m_SHARED_MEM_INST);
	m_ProcessorStats->globalStats()->addStatistic(m_SHARED_MEM_ACCESS);
	m_ProcessorStats->globalStats()->addStatistic(m_LD_NO_FORWARD);
	m_ProcessorStats->globalStats()->addStatistic(m_FORWARDED_LD);
	m_ProcessorStats->globalStats()->addStatistic(m_CACHE_BANK_BUSY);
	m_ProcessorStats->globalStats()->addStatistic(m_ICACHE_MISS_TOTAL);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_PERIOD);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_APPL0);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_APPL1);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_APPL2);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_APPL3);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_CAGE_APPL4);
	m_ProcessorStats->globalStats()->addStatistic(m_ABIP_AVG_RATIO_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_ABIP_AVG_RATIO);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_STACK_ACCESS);
	m_ProcessorStats->globalStats()->addStatistic(m_NUM_HEAP_ACCESS);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_PACKET_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_TOTAL_PACKET_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY_BASE_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY_BASE_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_LATENCY_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET_BASE_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET_BASE_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_ACTIVE_PACKET_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_IDLE_CHANNEL);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_IDLE_CHANNEL_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_IDLE_CHANNEL_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_IDLE_CHANNEL_L3);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_IDLE_CHANNEL_MC);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_BASE);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_BASE_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_BASE_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_BASE_L3);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_BASE_MC);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_CPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_GPU);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_L3);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_AVG_WAIT_IN_ROUTER_MC);
	m_ProcessorStats->globalStats()->addStatistic(m_NOC_LINK_ACTIVE);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_LINEFILL_BUF_R);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_LINEFILL_BUF_W);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_LINEFILL_BUF_R_TAG);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_WB_BUF_R);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_WB_BUF_W);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_WB_BUF_R_TAG);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_R);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_W);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_L3CACHE_R_TAG);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_MC_R);
	m_ProcessorStats->globalStats()->addStatistic(m_POWER_MC_W);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_1);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_2);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_3);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_4);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_5);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_6);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_7);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_8);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_9);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC_10);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_1);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_2);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_3);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_4);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_5);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_6);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_7);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_8);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_9);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_TIMELY_10);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_1);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_2);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_3);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_4);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_5);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_6);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_7);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_8);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_9);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_POL_10);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC1_HT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC1_HT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC1_LT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC1_LT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC2_HT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC2_HT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC2_LT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC2_LT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC3_HT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC3_HT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC3_LT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC3_LT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC4_HT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC4_HT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC4_LT_HP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_ACC4_LT_LP);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DISTANCE_1);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DISTANCE_2);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DISTANCE_3);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DISTANCE_4);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DISTANCE_5);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_PFPOL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DL0REQ_QUEUE_HIT_BY_DEMAND);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UL2REQ_QUEUE_HIT_BY_DEMAND);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DL0REQ_QUEUE_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UL2REQ_QUEUE_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UL2REQ_SEND_QUEUE_STALL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UL2REQ_QUEUE_MATCHED_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_DL0REQ_QUEUE_MATCHED_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UL2REQ_QUEUE_SENTREQ);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UNUSED_EVICT);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_REGION_SENT);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_REGION_USEFUL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_REGION_EVICT);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_PHASE_OVERWRITE_PAGE);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_UPDATE_COUNT);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_0);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_1);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_2);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_3);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_4);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_5);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HYBRID_SEL_6);
	m_ProcessorStats->globalStats()->addStatistic(m_DCACHE_PREF_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_IFETCH_WB_FIRST_SCHEDULE);
	m_ProcessorStats->globalStats()->addStatistic(m_PREFETCH_LAST_SCHEDULE);
	m_ProcessorStats->globalStats()->addStatistic(m_DEMAND_PASS_PREF_SCHEDULE);
	m_ProcessorStats->globalStats()->addStatistic(m_DEMAND_PASS_LOW_OP_SCHEDULE);
	m_ProcessorStats->globalStats()->addStatistic(m_DEMAND_LAST_SCHEDULE);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_BUFFER_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_SEND_TO_MEM_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_SEND_TO_MEM_REQ_FAIL);
	m_ProcessorStats->globalStats()->addStatistic(m_HIT_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addStatistic(m_MISS_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_TRAIN_CREATE);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_HWP_PREF_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_SW_PREF_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_IFETCH_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_DFETCH_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_DSTORE_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_DPRF_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_MEM_REQ_MISS_WB_Q);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_IFETCH);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_DFETCH);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_DSTORE);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_IPREF);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_DPRF);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_DEMAND_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_BY_PREF);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_IFETCH);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_DFETCH);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_DSTORE);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_IPREF);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_DPRF);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_HIT_DEMAND_WB);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_L2_FILL);
	m_ProcessorStats->globalStats()->addStatistic(m_DEMAND_L2_FILL);
	m_ProcessorStats->globalStats()->addStatistic(m_PREF_REQ_QUE_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_REQ_QUEUE_HIT_BY_DEMAND);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_PREF_REQ_QUE_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_HIT_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_MISS_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_TRAIN_CREATE);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_BUFFER_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_PREF_DCACHE_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_PREF_DCACHE_INSERT);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_L2_MISS);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_DCACHE_PORT_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_STREAM_PREF_L2_PORT_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_TRAIN_HIT_DEMAND);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_TRAIN_MISS_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_TRAIN_FILTER_MISS);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_TRAIN_FILTER_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_PREF_REQ_DCACHE_HIT);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_PREF_REQ_DCACHE_MISS);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_L2SEND_Q_FULL);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_L2SEND_Q_ENTER);
	m_ProcessorStats->globalStats()->addStatistic(m_L2HIT_MEM_REQ);
	m_ProcessorStats->globalStats()->addStatistic(m_REMOVE_REDUNDANT_STREAM_STAT);
	m_ProcessorStats->globalStats()->addStatistic(m_REPLACE_OLD_STREAM);
	m_ProcessorStats->globalStats()->addStatistic(m_REQ_SEND_QUEUE_STALL);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_0);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_10);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_20);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_30);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_40);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_50);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_60);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_70);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_80);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_90);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_LENGTH_100_P);
	m_ProcessorStats->globalStats()->addStatistic(m_STREAM_ENTER_RA);
	m_ProcessorStats->globalStats()->addStatistic(m_TRACE_READ_COUNT);


	m_DIST_COAL_INST->addMember(COAL_INST);
	m_DIST_COAL_INST->addMember(UNCOAL_INST);
	m_DIST_COAL_INST_SINGLE_TRANS->addMember(COAL_INST_SINGLE_TRANS);
	m_DIST_COAL_INST_SINGLE_TRANS->addMember(COAL_INST_MUL_TRANS);
	m_DIST_COAL_INST_SINGLE_TRANS->addMember(UNCOAL_INST_MUL_TRANS);
	m_DIST_SM_COAL_INST->addMember(SM_COAL_INST);
	m_DIST_SM_COAL_INST->addMember(CM_COAL_INST);
	m_DIST_SM_COAL_INST->addMember(TM_COAL_INST);
	m_DIST_SM_COAL_INST->addMember(DM_COAL_INST);
	m_DIST_SM_UNCOAL_INST->addMember(SM_UNCOAL_INST);
	m_DIST_SM_UNCOAL_INST->addMember(CM_UNCOAL_INST);
	m_DIST_SM_UNCOAL_INST->addMember(TM_UNCOAL_INST);
	m_DIST_SM_UNCOAL_INST->addMember(DM_UNCOAL_INST);
	m_DIST_SM_COAL_INST_SINGLE_TRANS->addMember(SM_COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST_SINGLE_TRANS->addMember(CM_COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST_SINGLE_TRANS->addMember(TM_COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST_SINGLE_TRANS->addMember(DM_COAL_INST_SINGLE_TRANS);
	m_DIST_SM_COAL_INST_MUL_TRANS->addMember(SM_COAL_INST_MUL_TRANS);
	m_DIST_SM_COAL_INST_MUL_TRANS->addMember(CM_COAL_INST_MUL_TRANS);
	m_DIST_SM_COAL_INST_MUL_TRANS->addMember(TM_COAL_INST_MUL_TRANS);
	m_DIST_SM_COAL_INST_MUL_TRANS->addMember(DM_COAL_INST_MUL_TRANS);
	m_DIST_LD_NO_FORWARD->addMember(LD_NO_FORWARD);
	m_DIST_LD_NO_FORWARD->addMember(FORWARDED_LD);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_1);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_2);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_3);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_4);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_5);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_6);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_7);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_8);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_9);
	m_DIST_PREF_ACC_1->addMember(PREF_ACC_10);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_1);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_2);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_3);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_4);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_5);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_6);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_7);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_8);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_9);
	m_DIST_PREF_TIMELY_1->addMember(PREF_TIMELY_10);
	m_DIST_PREF_POL_1->addMember(PREF_POL_1);
	m_DIST_PREF_POL_1->addMember(PREF_POL_2);
	m_DIST_PREF_POL_1->addMember(PREF_POL_3);
	m_DIST_PREF_POL_1->addMember(PREF_POL_4);
	m_DIST_PREF_POL_1->addMember(PREF_POL_5);
	m_DIST_PREF_POL_1->addMember(PREF_POL_6);
	m_DIST_PREF_POL_1->addMember(PREF_POL_7);
	m_DIST_PREF_POL_1->addMember(PREF_POL_8);
	m_DIST_PREF_POL_1->addMember(PREF_POL_9);
	m_DIST_PREF_POL_1->addMember(PREF_POL_10);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC1_HT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC1_HT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC1_LT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC1_LT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC2_HT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC2_HT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC2_LT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC2_LT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC3_HT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC3_HT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC3_LT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC3_LT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC4_HT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC4_HT_LP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC4_LT_HP);
	m_DIST_PREF_ACC1_HT_HP->addMember(PREF_ACC4_LT_LP);
	m_DIST_PREF_DISTANCE_1->addMember(PREF_DISTANCE_1);
	m_DIST_PREF_DISTANCE_1->addMember(PREF_DISTANCE_2);
	m_DIST_PREF_DISTANCE_1->addMember(PREF_DISTANCE_3);
	m_DIST_PREF_DISTANCE_1->addMember(PREF_DISTANCE_4);
	m_DIST_PREF_DISTANCE_1->addMember(PREF_DISTANCE_5);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_0);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_1);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_2);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_3);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_4);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_5);
	m_DIST_PREF_HYBRID_SEL_0->addMember(PREF_HYBRID_SEL_6);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE->addMember(IFETCH_WB_FIRST_SCHEDULE);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE->addMember(PREFETCH_LAST_SCHEDULE);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE->addMember(DEMAND_PASS_PREF_SCHEDULE);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE->addMember(DEMAND_PASS_LOW_OP_SCHEDULE);
	m_DIST_IFETCH_WB_FIRST_SCHEDULE->addMember(DEMAND_LAST_SCHEDULE);
	m_DIST_PREF_SEND_TO_MEM_REQ->addMember(PREF_SEND_TO_MEM_REQ);
	m_DIST_PREF_SEND_TO_MEM_REQ->addMember(PREF_SEND_TO_MEM_REQ_FAIL);
	m_DIST_HIT_TRAIN_STREAM->addMember(HIT_TRAIN_STREAM);
	m_DIST_HIT_TRAIN_STREAM->addMember(MISS_TRAIN_STREAM);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_HWP_PREF_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_SW_PREF_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_IFETCH_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_DFETCH_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_DSTORE_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_DPRF_Q);
	m_DIST_MEM_REQ_MISS_HWP_PREF_Q->addMember(MEM_REQ_MISS_WB_Q);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_IFETCH);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_DFETCH);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_DSTORE);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_IPREF);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_DPRF);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_DEMAND_WB);
	m_DIST_PREF_HIT_BY_DEMAND_IFETCH->addMember(PREF_HIT_BY_PREF);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_IFETCH);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_DFETCH);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_DSTORE);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_IPREF);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_DPRF);
	m_DIST_PREF_HIT_DEMAND_IFETCH->addMember(PREF_HIT_DEMAND_WB);
	m_DIST_PREF_L2_FILL->addMember(PREF_L2_FILL);
	m_DIST_PREF_L2_FILL->addMember(DEMAND_L2_FILL);
	m_DIST_L2HIT_HIT_TRAIN_STREAM->addMember(L2HIT_HIT_TRAIN_STREAM);
	m_DIST_L2HIT_HIT_TRAIN_STREAM->addMember(L2HIT_MISS_TRAIN_STREAM);
	m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT->addMember(L2HIT_STREAM_PREF_DCACHE_HIT);
	m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT->addMember(L2HIT_STREAM_PREF_DCACHE_INSERT);
	m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT->addMember(L2HIT_STREAM_L2_MISS);
	m_DIST_L2HIT_TRAIN_HIT_DEMAND->addMember(L2HIT_TRAIN_HIT_DEMAND);
	m_DIST_L2HIT_TRAIN_HIT_DEMAND->addMember(L2HIT_TRAIN_MISS_REQ);
	m_DIST_L2HIT_TRAIN_FILTER_MISS->addMember(L2HIT_TRAIN_FILTER_MISS);
	m_DIST_L2HIT_TRAIN_FILTER_MISS->addMember(L2HIT_TRAIN_FILTER_HIT);
	m_DIST_L2HIT_PREF_REQ_DCACHE_HIT->addMember(L2HIT_PREF_REQ_DCACHE_HIT);
	m_DIST_L2HIT_PREF_REQ_DCACHE_HIT->addMember(L2HIT_PREF_REQ_DCACHE_MISS);
	m_DIST_L2HIT_L2SEND_Q_FULL->addMember(L2HIT_L2SEND_Q_FULL);
	m_DIST_L2HIT_L2SEND_Q_FULL->addMember(L2HIT_L2SEND_Q_ENTER);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_0);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_10);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_20);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_30);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_40);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_50);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_60);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_70);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_80);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_90);
	m_DIST_STREAM_LENGTH_0->addMember(STREAM_LENGTH_100_P);


	m_ProcessorStats->globalStats()->addDistribution(m_DIST_COAL_INST);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_SM_COAL_INST);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_SM_UNCOAL_INST);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_SM_COAL_INST_SINGLE_TRANS);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_SM_COAL_INST_MUL_TRANS);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_LD_NO_FORWARD);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_ACC_1);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_TIMELY_1);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_POL_1);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_ACC1_HT_HP);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_DISTANCE_1);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_HYBRID_SEL_0);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_IFETCH_WB_FIRST_SCHEDULE);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_SEND_TO_MEM_REQ);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_HIT_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_MEM_REQ_MISS_HWP_PREF_Q);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_HIT_BY_DEMAND_IFETCH);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_HIT_DEMAND_IFETCH);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_PREF_L2_FILL);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_HIT_TRAIN_STREAM);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_STREAM_PREF_DCACHE_HIT);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_TRAIN_HIT_DEMAND);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_TRAIN_FILTER_MISS);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_PREF_REQ_DCACHE_HIT);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_L2HIT_L2SEND_Q_FULL);
	m_ProcessorStats->globalStats()->addDistribution(m_DIST_STREAM_LENGTH_0);


	m_coreStatsTemplate->addStatistic(m_BP_ON_PATH_CORRECT);
	m_coreStatsTemplate->addStatistic(m_BP_ON_PATH_MISPREDICT);
	m_coreStatsTemplate->addStatistic(m_BP_ON_PATH_MISFETCH);
	m_coreStatsTemplate->addStatistic(m_BP_OFF_PATH_CORRECT);
	m_coreStatsTemplate->addStatistic(m_BP_OFF_PATH_MISPREDICT);
	m_coreStatsTemplate->addStatistic(m_BP_OFF_PATH_MISFETCH);
	m_coreStatsTemplate->addStatistic(m_BP_MISPRED_STALL);
	m_coreStatsTemplate->addStatistic(m_BP_RESOLVED);
	m_coreStatsTemplate->addStatistic(m_BP_REDIRECT_RESOLVED);
	m_coreStatsTemplate->addStatistic(m_PERFECT_TARGET_PRED);
	m_coreStatsTemplate->addStatistic(m_SCHED_FAILED_REASON_SUCCESS);
	m_coreStatsTemplate->addStatistic(m_SCHED_FAILED_OPERANDS_NOT_READY);
	m_coreStatsTemplate->addStatistic(m_SCHED_FAILED_NO_PORTS);
	m_coreStatsTemplate->addStatistic(m_NUM_SAMPLES);
	m_coreStatsTemplate->addStatistic(m_NUM_ACTIVE_BLOCKS);
	m_coreStatsTemplate->addStatistic(m_NUM_ACTIVE_THREADS);
	m_coreStatsTemplate->addStatistic(m_NUM_SCHED_IDLE_CYCLE);
	m_coreStatsTemplate->addStatistic(m_NUM_NO_SCHED_CYCLE);
	m_coreStatsTemplate->addStatistic(m_ROI_NUM_NO_SCHED_CYCLE);
	m_coreStatsTemplate->addStatistic(m_CORE_DISPATCHED_INST);
	m_coreStatsTemplate->addStatistic(m_CORE_DISPATCH_WAIT);
	m_coreStatsTemplate->addStatistic(m_CORE_CYCLES);
	m_coreStatsTemplate->addStatistic(m_ROI_CORE_CYCLES);
	m_coreStatsTemplate->addStatistic(m_CORE_SCHED_THREADS);
	m_coreStatsTemplate->addStatistic(m_CORE_NUM_NO_FETCH_CYCLES);
	m_coreStatsTemplate->addStatistic(m_CORE_NUM_NO_FETCH_CYCLES_WITH_READY_THREADS);
	m_coreStatsTemplate->addStatistic(m_CORE_NUM_FETCH_CYCLES);
	m_coreStatsTemplate->addStatistic(m_CORE_FETCH_DELTA);
	m_coreStatsTemplate->addStatistic(m_CORE_NUM_RETIRE_CYCLES);
	m_coreStatsTemplate->addStatistic(m_CORE_RETIRE_DELTA);
	m_coreStatsTemplate->addStatistic(m_INST_COUNT);
	m_coreStatsTemplate->addStatistic(m_CYC_COUNT);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_INVALID);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_3DNOW);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_AES);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_BASE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_BINARY);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_BITBYTE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_CALL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_CMOV);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_COND_BR);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_DATAXFER);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_DECIMAL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_FCMOV);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_FLAGOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_INTERRUPT);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_IO);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_IOSTRINGOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_LOGICAL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_MISC);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_MMX);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_NOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PCLMULQDQ);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_POP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PREFETCH);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PUSH);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_RET);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_ROTATE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SEGOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SEMAPHORE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SHIFT);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SSE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SSE5);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_STRINGOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SYSCALL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SYSRET);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_SYSTEM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_UNCOND_BR);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_VTX);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_WIDENOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_X87_ALU);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_XSAVE);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MUL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_DIV);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_FMUL);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_FDIV);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_NOP);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PREFETCH_NTA);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PREFETCH_T0);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PREFETCH_T1);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_PREFETCH_T2);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_LD_LM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_LD_SM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_LD_GM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_ST_LM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_ST_SM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_MEM_ST_GM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_DATA_XFER_LM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_DATA_XFER_SM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_DATA_XFER_GM);
	m_coreStatsTemplate->addStatistic(m_OP_CAT_TR_LAST);
	m_coreStatsTemplate->addStatistic(m_FP_OPS);
	m_coreStatsTemplate->addStatistic(m_ICACHE_HIT);
	m_coreStatsTemplate->addStatistic(m_ICACHE_MISS);
	m_coreStatsTemplate->addStatistic(m_MEM_STALL_CYCLE);
	m_coreStatsTemplate->addStatistic(m_ICACHE_FILL);
	m_coreStatsTemplate->addStatistic(m_POWER_BLOCK_STATES_R);
	m_coreStatsTemplate->addStatistic(m_POWER_BLOCK_STATES_W);
	m_coreStatsTemplate->addStatistic(m_POWER_FETCH_QUEUE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FETCH_QUEUE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_QUEUE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_QUEUE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_BR_PRED_R);
	m_coreStatsTemplate->addStatistic(m_POWER_BR_PRED_W);
	m_coreStatsTemplate->addStatistic(m_POWER_RAS_R);
	m_coreStatsTemplate->addStatistic(m_POWER_RAS_W);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_MISS_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_MISS_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_MISS_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_MISS_BUF_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_TOT_ACC);
	m_coreStatsTemplate->addStatistic(m_POWER_ICACHE_CONF);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_DECODER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_DECODER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_MICRO_OP_SEQ_R);
	m_coreStatsTemplate->addStatistic(m_POWER_MICRO_OP_SEQ_W);
	m_coreStatsTemplate->addStatistic(m_POWER_OPERAND_DECODER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_OPERAND_DECODER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_UOP_QUEUE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_UOP_QUEUE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_REG_RENAMING_TABLE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_REG_RENAMING_TABLE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DEP_CHECK_LOGIC_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FREELIST_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FREELIST_W);
	m_coreStatsTemplate->addStatistic(m_POWER_RESERVATION_STATION_R);
	m_coreStatsTemplate->addStatistic(m_POWER_RESERVATION_STATION_W);
	m_coreStatsTemplate->addStatistic(m_POWER_RESERVATION_STATION_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_RESERVATION_STATION_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_ISSUE_SEL_LOGIC_R);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_ISSUE_SEL_LOGIC_W);
	m_coreStatsTemplate->addStatistic(m_POWER_PAYLOAD_RAM_R);
	m_coreStatsTemplate->addStatistic(m_POWER_PAYLOAD_RAM_W);
	m_coreStatsTemplate->addStatistic(m_POWER_EX_ALU_R);
	m_coreStatsTemplate->addStatistic(m_POWER_EX_FPU_R);
	m_coreStatsTemplate->addStatistic(m_POWER_EX_MUL_R);
	m_coreStatsTemplate->addStatistic(m_POWER_EX_SFU_R);
	m_coreStatsTemplate->addStatistic(m_POWER_REORDER_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_REORDER_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_COMMIT_SEL_LOGIC_R);
	m_coreStatsTemplate->addStatistic(m_POWER_INST_COMMIT_SEL_LOGIC_W);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_RENAME_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_RENAME_W);
	m_coreStatsTemplate->addStatistic(m_POWER_LOAD_QUEUE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_LOAD_QUEUE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_LOAD_QUEUE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_LOAD_QUEUE_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_STORE_QUEUE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_STORE_QUEUE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_STORE_QUEUE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_STORE_QUEUE_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DATA_TLB_R);
	m_coreStatsTemplate->addStatistic(m_POWER_DATA_TLB_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DATA_TLB_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DATA_TLB_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_INT_REGFILE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_INT_REGFILE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_REGFILE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_REGFILE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_GP_REGISTER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_GP_REGISTER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_REGISTER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FP_REGISTER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_SEGMENT_REGISTER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_SEGMENT_REGISTER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_CONTROL_REGISTER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_CONTROL_REGISTER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_FLAG_REGISTER_R);
	m_coreStatsTemplate->addStatistic(m_POWER_FLAG_REGISTER_W);
	m_coreStatsTemplate->addStatistic(m_POWER_EXEC_BYPASS);
	m_coreStatsTemplate->addStatistic(m_POWER_LOAD_BYPASS);
	m_coreStatsTemplate->addStatistic(m_POWER_PIPELINE);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_MISS_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_MISS_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_MISS_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_MISS_BUF_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_LINEFILL_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_LINEFILL_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_LINEFILL_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_LINEFILL_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_LINEFILL_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_LINEFILL_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_LINEFILL_BUF_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_WB_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_WB_BUF_R);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_WB_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_WB_BUF_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_WB_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_WB_BUF_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_WB_BUF_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_DCACHE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_L2CACHE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_CONST_CACHE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_CONST_CACHE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_CONST_CACHE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_CONST_CACHE_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_TEXTURE_CACHE_R);
	m_coreStatsTemplate->addStatistic(m_POWER_TEXTURE_CACHE_W);
	m_coreStatsTemplate->addStatistic(m_POWER_TEXTURE_CACHE_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_TEXTURE_CACHE_W_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_SHARED_MEM_R);
	m_coreStatsTemplate->addStatistic(m_POWER_SHARED_MEM_W);
	m_coreStatsTemplate->addStatistic(m_POWER_SHARED_MEM_R_TAG);
	m_coreStatsTemplate->addStatistic(m_POWER_SHARED_MEM_W_TAG);


	m_DIST_BP_ON_PATH_CORRECT->addMember(BP_ON_PATH_CORRECT);
	m_DIST_BP_ON_PATH_CORRECT->addMember(BP_ON_PATH_MISPREDICT);
	m_DIST_BP_ON_PATH_CORRECT->addMember(BP_ON_PATH_MISFETCH);
	m_DIST_BP_OFF_PATH_CORRECT->addMember(BP_OFF_PATH_CORRECT);
	m_DIST_BP_OFF_PATH_CORRECT->addMember(BP_OFF_PATH_MISPREDICT);
	m_DIST_BP_OFF_PATH_CORRECT->addMember(BP_OFF_PATH_MISFETCH);
	m_DIST_SCHED_FAILED_REASON_SUCCESS->addMember(SCHED_FAILED_REASON_SUCCESS);
	m_DIST_SCHED_FAILED_REASON_SUCCESS->addMember(SCHED_FAILED_OPERANDS_NOT_READY);
	m_DIST_SCHED_FAILED_REASON_SUCCESS->addMember(SCHED_FAILED_NO_PORTS);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_INVALID);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_3DNOW);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_AES);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_BASE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_BINARY);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_BITBYTE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_CALL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_CMOV);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_COND_BR);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_DATAXFER);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_DECIMAL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_FCMOV);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_FLAGOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_INTERRUPT);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_IO);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_IOSTRINGOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_LOGICAL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_MISC);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_MMX);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_NOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PCLMULQDQ);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_POP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PREFETCH);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PUSH);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_RET);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_ROTATE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SEGOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SEMAPHORE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SHIFT);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SSE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SSE5);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_STRINGOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SYSCALL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SYSRET);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_SYSTEM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_UNCOND_BR);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_VTX);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_WIDENOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_X87_ALU);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_XSAVE);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MUL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_DIV);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_FMUL);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_FDIV);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_NOP);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PREFETCH_NTA);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PREFETCH_T0);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PREFETCH_T1);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_PREFETCH_T2);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_LD_LM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_LD_SM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_LD_GM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_ST_LM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_ST_SM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_MEM_ST_GM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_DATA_XFER_LM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_DATA_XFER_SM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_DATA_XFER_GM);
	m_DIST_OP_CAT_INVALID->addMember(OP_CAT_TR_LAST);
	m_DIST_ICACHE_HIT->addMember(ICACHE_HIT);
	m_DIST_ICACHE_HIT->addMember(ICACHE_MISS);


	m_coreStatsTemplate->addDistribution(m_DIST_BP_ON_PATH_CORRECT);
	m_coreStatsTemplate->addDistribution(m_DIST_BP_OFF_PATH_CORRECT);
	m_coreStatsTemplate->addDistribution(m_DIST_SCHED_FAILED_REASON_SUCCESS);
	m_coreStatsTemplate->addDistribution(m_DIST_OP_CAT_INVALID);
	m_coreStatsTemplate->addDistribution(m_DIST_ICACHE_HIT);
}
